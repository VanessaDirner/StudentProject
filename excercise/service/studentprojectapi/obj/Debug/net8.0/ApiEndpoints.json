[
  {
    "ContainingType": "studentprojectapi.Controllers.AssignmentController",
    "Method": "GetAsssignments",
    "RelativePath": "api/Assignment",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[studentprojectapi.Models.AssignmentDTO, studentprojectapi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "studentprojectapi.Controllers.AssignmentController",
    "Method": "AddAssignment",
    "RelativePath": "api/Assignment",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "assignmentDTO",
        "Type": "studentprojectapi.Models.AssignmentDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "studentprojectapi.Controllers.AssignmentController",
    "Method": "DeleteAssignment",
    "RelativePath": "api/Assignment",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "deleteassignmentDTO",
        "Type": "studentprojectapi.Models.DeleteAssignmentDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "studentprojectapi.Controllers.DepartmentController",
    "Method": "GetDepartments",
    "RelativePath": "api/Department",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[studentprojectapi.Models.DepartmentDTO, studentprojectapi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "studentprojectapi.Controllers.DepartmentController",
    "Method": "AddDepartmentAsync",
    "RelativePath": "api/Department",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDepartmentDTO",
        "Type": "studentprojectapi.Models.DepartmentDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "studentprojectapi.Models.DepartmentDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "studentprojectapi.Controllers.DepartmentController",
    "Method": "ModifyDepartments",
    "RelativePath": "api/Department",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "modifydepartmentDTO",
        "Type": "studentprojectapi.Models.DepartmentDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "studentprojectapi.Controllers.DepartmentController",
    "Method": "DeleteDepartmentService",
    "RelativePath": "api/Department",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "deletedepartmentdto",
        "Type": "studentprojectapi.Models.DeleteDepartmentDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "studentprojectapi.Controllers.PersonController",
    "Method": "GetEmployees",
    "RelativePath": "api/Person",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "studentprojectapi.Models.PersonDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "studentprojectapi.Controllers.PersonController",
    "Method": "AddEmployee",
    "RelativePath": "api/Person",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "personDTO",
        "Type": "studentprojectapi.Models.PersonDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "studentprojectapi.Models.PersonDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "studentprojectapi.Controllers.PersonController",
    "Method": "ModifyEmployee",
    "RelativePath": "api/Person",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updatepersonDTO",
        "Type": "studentprojectapi.Models.PersonDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "studentprojectapi.Models.PersonDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "studentprojectapi.Controllers.PersonController",
    "Method": "DeleteEmployee",
    "RelativePath": "api/Person",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "deletepersonDTO",
        "Type": "studentprojectapi.Models.deletepersonDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "studentprojectapi.Controllers.ReportingController",
    "Method": "GetReport",
    "RelativePath": "api/Reporting/View",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[studentprojectapi.Models.ReportingDTO, studentprojectapi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]