<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IBSControlLibrary</name>
    </assembly>
    <members>
        <member name="T:IBSControlLibrary.IBSDisplayName">
            <summary>
            Appends _IBS to the property display name
            </summary>
        </member>
        <member name="M:IBSControlLibrary.IBSDisplayName.#ctor(System.String)">
            <summary>
            Base constructor
            </summary>
            <param name="_name"></param>
        </member>
        <member name="M:IBSControlLibrary.ControlLibraryHelper.SetColorTable(IBSControlLibrary.ControlLibraryHelper.ColorTableType)">
            <summary>
            Set the control library color table
            </summary>
            <param name="_type"></param>
        </member>
        <member name="M:IBSControlLibrary.ControlLibraryHelper.GetBackgroundColor(IBSControlLibrary.GlobalEnums.ColorState)">
            <summary>
            Get the background color for a button bar/button bar button based on color type
            </summary>
            <param name="_type"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.ButtonBar.ButtonBar.ShowDefaultLabel">
            <summary>
            Generate the default button bar item
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.ButtonBar.ButtonBarButton.GenerateStandardButton">
            <summary>
            Generate a standard button based on button type
            </summary>
        </member>
        <member name="F:IBSControlLibrary.Controls.ButtonBar.ButtonBarSplitter.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.ButtonBar.ButtonBarSplitter.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.ButtonBar.ButtonBarSplitter.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.ButtonMenu.ButtonMenu.Init(System.ComponentModel.BindingList{IBSControlLibrary.Controls.Buttons.TextButton})">
            <summary>
            Builds button list
            </summary>
            <param name="_Items"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.ButtonMenu.ButtonMenu.Add(IBSControlLibrary.Controls.Buttons.TextButton)">
            <summary>
            Add a new button to Menu using property defaults from menu
            </summary>
            <param name="_item"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.ButtonMenu.ButtonMenu.SetSelected(IBSControlLibrary.Controls.Buttons.TextButton)">
            <summary>
            Set current button as selected
            </summary>
            <param name="_item"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.ButtonMenu.ButtonMenu.SetSelected">
            <summary>
            Loops through button collection setting first IsSelected control as selected
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.ButtonMenu.ButtonMenu.SetUnselected(IBSControlLibrary.Controls.Buttons.TextButton)">
            <summary>
            Set a button as unselected
            </summary>
            <param name="_m"></param>
        </member>
        <member name="F:IBSControlLibrary.Controls.ButtonMenu.ButtonMenu.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.ButtonMenu.ButtonMenu.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.ButtonMenu.ButtonMenu.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Buttons.TextButton.PerformClick">
            <summary>
            Force the the button click event
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Buttons.TextButton.CanClick">
            <summary>
            Check if the button state will trigger a click event
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Controls.Containers.BaseBackNavControl.BackButtonClick(System.Object,DevExpress.XtraBars.Docking2010.ButtonEventArgs)">
            <summary>
            Back button clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Containers.BaseBackNavControl.SetImageIcon(System.Drawing.Image)">
            <summary>
            Set Form Image Icon
            </summary>
            <param name="_img"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Containers.BaseBackNavControl.SetTitle">
            <summary>
            Set title based on type
            </summary>
            <param name="_img"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Containers.BaseBackNavControl.NAVIGATE_Content(System.Windows.Forms.Control)">
            <summary>
            Load Module Content
            </summary>
            <param name="_control"></param>
        </member>
        <member name="F:IBSControlLibrary.Controls.Containers.BaseBackNavControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Containers.BaseBackNavControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Containers.BaseBackNavControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Containers.BaseUserControl.HookGlobalEvents">
            <summary>
            Hook global events
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Containers.BaseUserControl.Globals_g_EVENT_FontTableChanged(System.Object,System.EventArgs)">
            <summary>
            Implements shell theme on font table change
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Containers.BaseUserControl.Globals_g_EVENT_ColorTableChanged(System.Object,System.EventArgs)">
            <summary>
            Implements shell theme on color table change
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Containers.BaseUserControl.ImplementShellTheme">
            <summary>
            Implements shell theme on current controls
            </summary>
        </member>
        <member name="F:IBSControlLibrary.Controls.Containers.BaseUserControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Containers.BaseUserControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Containers.BaseUserControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:IBSControlLibrary.Controls.Containers.CenterPanelLayout.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Containers.CenterPanelLayout.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Containers.CenterPanelLayout.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Containers.CollapsingPanelComponents.CollapsingHeaderPanel.SetVisibleState">
            <summary>
            Set visibility state
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Containers.CollapsingPanelComponents.CollapsingHeaderPanel.ExpandCollapse(System.Boolean)">
            <summary>
            Invoke the expand/collapse functionality
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Containers.CollapsingPanelComponents.CollapsingHeaderPanel.Control_MouseEnter(System.Object,System.EventArgs)">
            <summary>
            Control mouse enter
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Containers.CollapsingPanelComponents.CollapsingHeaderPanel.Control_MouseLeave(System.Object,System.EventArgs)">
            <summary>
            Control mouse leave
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:IBSControlLibrary.Controls.Containers.CollapsingPanelComponents.CollapsingHeaderPanel.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Containers.CollapsingPanelComponents.CollapsingHeaderPanel.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Containers.CollapsingPanelComponents.CollapsingHeaderPanel.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Containers.CollapsingPanelComponents.CollapsingSidePanel._TITLE_LABEL_Click(System.Object,System.EventArgs)">
            <summary>
            Title clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Containers.CollapsingPanelComponents.CollapsingSidePanel.Control_MouseEnter(System.Object,System.EventArgs)">
            <summary>
            Control mouse enter
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Containers.CollapsingPanelComponents.CollapsingSidePanel.Control_MouseLeave(System.Object,System.EventArgs)">
            <summary>
            Control mouse leave
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:IBSControlLibrary.Controls.Containers.CollapsingPanelComponents.CollapsingSidePanel.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Containers.CollapsingPanelComponents.CollapsingSidePanel.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Containers.CollapsingPanelComponents.CollapsingSidePanel.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Containers.CollapsingPanel.OnLoaded">
            <summary>
            Control loaded
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Containers.CollapsingPanel.OnDockChanged(System.EventArgs)">
            <summary>
            Control docking changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Containers.CollapsingPanel.InitControl">
            <summary>
            Initialze a control
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Containers.CollapsingPanel.SetVisibleState">
            <summary>
            Set visibility state
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Containers.CollapsingPanel.ExpandCollapse(System.Boolean)">
            <summary>
            Invoke the expand/collapse functionality
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Forms.CoverPanel.SetFlyout(DevExpress.Utils.FlyoutPanel)">
            <summary>
            Display a flyout panel over the cover panel
            </summary>
            <param name="_flyout"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Forms.CoverPanel.HideFlyout">
            <summary>
            Display a flyout panel over the cover panel
            </summary>
            <param name="_flyout"></param>
        </member>
        <member name="F:IBSControlLibrary.Controls.Forms.CoverPanel.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Forms.CoverPanel.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Forms.CoverPanel.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Forms.FormBase.BorderlessForm.PANEL_HEADER_MOUSEDOWN(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Panel header mouse down events
                - Double-Click
                - Form Drag
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Forms.FormBase.BorderlessForm.DRAG_FORM(System.Object)">
            <summary>
            Set drag state when mouse is down on control
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Forms.FormBase.BorderlessForm.SWITCHSTATE_FORM">
            <summary>
            Changes the window state between maximized and normal for the current form
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Forms.FormBase.BorderlessForm.MAXIMIZE_FORM">
            <summary>
            Maximize the current form
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Forms.FormBase.BorderlessForm.MINIMIZE_FORM">
            <summary>
            Minimize the current form
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Forms.FormBase.BorderlessForm.CLOSE_FORM">
            <summary>
            Close the current form
            </summary>
        </member>
        <member name="F:IBSControlLibrary.Controls.Forms.FormBase.BorderlessForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Forms.FormBase.BorderlessForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Forms.FormBase.BorderlessForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:IBSControlLibrary.Controls.Forms.HostWaitForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Forms.HostWaitForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Forms.HostWaitForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Forms.IBSPopupForm.HookGlobalEvents">
            <summary>
            Hook global events
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Forms.IBSPopupForm.Globals_g_EVENT_FontTableChanged(System.Object,System.EventArgs)">
            <summary>
            Implements shell theme on font table change
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Forms.IBSPopupForm.Globals_g_EVENT_ColorTableChanged(System.Object,System.EventArgs)">
            <summary>
            Implements shell theme on color table change
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Forms.IBSPopupForm.ImplementShellTheme">
            <summary>
            Implements shell theme on current controls
            </summary>
        </member>
        <member name="E:IBSControlLibrary.Controls.Grid.IBSGridControl.DeleteRow">
            <summary>
            Fires when the delete column is clicked on a row
            </summary>
        </member>
        <member name="E:IBSControlLibrary.Controls.Grid.IBSGridControl.GridConfigured">
            <summary>
            Fires when the delete column is clicked on a row
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Controls.Grid.IBSGridControl.DeleteColumnEdit">
            <summary>
            ColumnEdit used within the DeleteColumn
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Controls.Grid.IBSGridControl.DeleteColumn">
            <summary>
            Column used to house the delete button
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Controls.Grid.IBSGridControl.ShowDeleteColumn">
            <summary>
            Appends a column used for deleting a row as the far right hand column, Only visible at run time
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Controls.Grid.IBSGridControl.ReadOnlyMode">
            <summary>
            Makes grid read only, and grid greyed out
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Grid.IBSGridControl.ForceCommit">
            <summary>
            Force editor to update current cell
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Grid.IBSGridControl.Clear">
            <summary>
            Clears the current grid datasouce and columns
            </summary>
        </member>
        <member name="F:IBSControlLibrary.Controls.Grid.IBSGridControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Grid.IBSGridControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Grid.IBSGridControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Grid.CreateView.SetBinding">
            <summary>
            Set control binding to object properties
            </summary>
        </member>
        <member name="F:IBSControlLibrary.Controls.Grid.CreateView.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Grid.CreateView.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Grid.CreateView.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Grid.GridLayout.GridLayout_Load(System.Object,System.EventArgs)">
            <summary>
            Control Load
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Grid.GridLayout.INIT_Views(System.Nullable{System.Guid})">
            <summary>
            Call to initialize grid views
            </summary>
            <param name="_referenceID">Pass in reference ID (ie. ProjetID) if views need to be grouped by the ID</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Grid.GridLayout.LOAD_LayoutList">
            <summary>
            Load all layouts associated to the current control
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Grid.GridLayout.LOAD_LayoutListDefaults">
            <summary>
            Load default layout associated to the current control
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Grid.GridLayout.SetButtonsEnabled">
            <summary>
            Set the grid lookup edit button states
            </summary>
        </member>
        <member name="F:IBSControlLibrary.Controls.Grid.GridLayout.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Grid.GridLayout.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Grid.GridLayout.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Grid.ManageGridViews.LoadGridItems">
            <summary>
            Load Grid items
            </summary>
        </member>
        <member name="F:IBSControlLibrary.Controls.Grid.ManageGridViews.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Grid.ManageGridViews.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Grid.ManageGridViews.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Labels.LabelContent.HookGlobalEvents">
            <summary>
            Hook global events
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Labels.LabelContent.Globals_g_EVENT_FontTableChanged(System.Object,System.EventArgs)">
            <summary>
            Implements shell theme on font table change
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Labels.LabelContent.Globals_g_EVENT_ColorTableChanged(System.Object,System.EventArgs)">
            <summary>
            Implements shell theme on color table change
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Labels.LabelContent.ImplementShellTheme">
            <summary>
            Implements shell theme on current controls
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Labels.LabelContentSubTitle.HookGlobalEvents">
            <summary>
            Hook global events
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Labels.LabelContentSubTitle.Globals_g_EVENT_FontTableChanged(System.Object,System.EventArgs)">
            <summary>
            Implements shell theme on font table change
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Labels.LabelContentSubTitle.Globals_g_EVENT_ColorTableChanged(System.Object,System.EventArgs)">
            <summary>
            Implements shell theme on color table change
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Labels.LabelContentSubTitle.ImplementShellTheme">
            <summary>
            Implements shell theme on current controls
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Labels.LabelContentTitle.HookGlobalEvents">
            <summary>
            Hook global events
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Labels.LabelContentTitle.Globals_g_EVENT_FontTableChanged(System.Object,System.EventArgs)">
            <summary>
            Implements shell theme on font table change
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Labels.LabelContentTitle.Globals_g_EVENT_ColorTableChanged(System.Object,System.EventArgs)">
            <summary>
            Implements shell theme on color table change
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Labels.LabelContentTitle.ImplementShellTheme">
            <summary>
            Implements shell theme on current controls
            </summary>
        </member>
        <member name="T:IBSControlLibrary.Controls.Labels.Orientation">
            <summary>
            This is a lable, in which you can set the text in any direction/angle
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Labels.RotatingLabel.HookGlobalEvents">
            <summary>
            Hook global events
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Labels.RotatingLabel.Globals_g_EVENT_FontTableChanged(System.Object,System.EventArgs)">
            <summary>
            Implements shell theme on font table change
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Labels.RotatingLabel.Globals_g_EVENT_ColorTableChanged(System.Object,System.EventArgs)">
            <summary>
            Implements shell theme on color table change
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Labels.RotatingLabel.ImplementShellTheme">
            <summary>
            Implements shell theme on current controls
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.LayoutCommon.CreateLayout.#ctor(System.String,System.Func{System.Collections.Generic.IEnumerable{IBSControlLibrary.Interfaces.Layout.ILayoutItemBase}},System.Func{IBSControlLibrary.Interfaces.Layout.ILayoutItemBase,System.Object},System.Action,System.Type,System.Boolean,System.String,System.String,System.String,System.Boolean,System.String,System.String)">
            <summary>
            Create new layout based on current control
            </summary>
            <param name="_layoutGroup"></param>
            <param name="_LoadLayoutsFunc">Return type of IEnumerable(Of ILayoutItemBase)</param>
            <param name="_GetLayoutFunc">Returns the generated layout for the control</param>
            <param name="_EmptyLayoutAction">Action to perform when creating a new/empty layout</param>
            <param name="_LayoutItem">Type of layout item being used</param>
            <param name="_isDevMode"></param>
            <param name="_referenceID"></param>
            <param name="_appName"></param>
            <param name="_appVersion"></param>
            <param name="_saveAs">If not SaveAs, EmptyLayout action will be executed prior to generting saved layout.</param>
            <param name="_displayType">Value to be displayed in UI to describe layout item type (default is 'Layout')</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.LayoutCommon.CreateLayout.#ctor(IBSControlLibrary.Interfaces.Layout.ILayoutItemBase,System.Func{System.Collections.Generic.IEnumerable{IBSControlLibrary.Interfaces.Layout.ILayoutItemBase}},System.Func{IBSControlLibrary.Interfaces.Layout.ILayoutItemBase,System.Object},System.Boolean,System.String)">
            <summary>
            Editing of a layout item
            </summary>
            <param name="_layoutItem">Layout item to be modified</param>
            <param name="_LoadLayoutsFunc">Return type of IEnumerable(Of ILayoutItemBase)</param>
            <param name="_GetLayoutFunc">Returns the generated layout for the control</param>        
            <param name="_isDevMode"></param>
            <param name="_displayType">Value to be displayed in UI to describe layout item type (default is 'Layout')</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.LayoutCommon.CreateLayout.SetBinding">
            <summary>
            Set control binding to object properties
            </summary>
        </member>
        <member name="F:IBSControlLibrary.Controls.LayoutCommon.CreateLayout.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.LayoutCommon.CreateLayout.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.LayoutCommon.CreateLayout.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.LayoutCommon.ManageLayouts.#ctor(System.String,System.Func{System.Collections.Generic.IEnumerable{IBSControlLibrary.Interfaces.Layout.ILayoutItemBase}},System.Func{IBSControlLibrary.Interfaces.Layout.ILayoutItemBase,System.Object},System.Action,System.String,System.String,IBSControlLibrary.Interfaces.Layout.ILayoutItemBase,System.Boolean,System.String,System.Boolean,System.Boolean,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="_layoutGroup"></param>
            <param name="_LayoutConvertControl"></param>
            <param name="_LoadLayoutsFunc">Return type of IEnumerable(Of ILayoutItemBase)</param>
            <param name="_GetLayoutFunc">Returns the generated layout for the control</param>
            <param name="_EmptyLayoutAction">Action to perform when creating a new/empty layout</param>        
            <param name="_appName"></param>
            <param name="_appVersion"></param>
            <param name="_currentLayout"></param>
            <param name="_isDevMode"></param>
            <param name="_referenceID"></param>
            <param name="_allowCreateLayout"></param>
            <param name="_allowManageLayout">If false, function bar will be hidden</param>
            <param name="_displayName">Value to be displayed in UI to describe layout item type (default is 'Layout')</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.LayoutCommon.ManageLayouts.LoadGridItems">
            <summary>
            Load Grid items
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.LayoutCommon.ManageLayouts.SetGlobalButtonVisibility">
            <summary>
            Set visibility of the make global butotn
            </summary>
        </member>
        <member name="F:IBSControlLibrary.Controls.LayoutCommon.ManageLayouts.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.LayoutCommon.ManageLayouts.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.LayoutCommon.ManageLayouts.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:IBSControlLibrary.Controls.Spreadsheet.CheckBoxFunction.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Spreadsheet.CheckBoxFunction.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Spreadsheet.CheckBoxFunction.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Spreadsheet.SpreadsheetHelper.FormatAsCheckbox(DevExpress.Spreadsheet.Cell)">
            <summary>
            Attempt to apply formula formatting to a spreadsheet cell
            </summary>
            <param name="_cell"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Spreadsheet.SpreadsheetTemplateController.GetTemplates(System.String,System.String)">
            <summary>
            Retrieve all templates for a TemplateType, ReferenceID
            </summary>
            <param name="_TemplateType"></param>
            <param name="_ReferenceID"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Controls.Spreadsheet.SpreadsheetTemplateController.GetTemplate(System.String,System.String,System.String)">
            <summary>
            Retrieve a template for a TemplateType, ReferenceID by Template Name
            </summary>
            <param name="_TemplateName"></param>
            <param name="_TemplateType"></param>
            <param name="_ReferenceID"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Controls.Spreadsheet.SpreadsheetTemplateController.GetTemplate(System.Guid)">
            <summary>
            Retrieve a template by its ID
            </summary>
            <param name="_TemplateID"></param>        
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Controls.Spreadsheet.SpreadsheetTemplateController.GetCoreTemplates(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Retrieve all core templates from the central server
            </summary>
            <param name="_AppName"></param>
            <param name="_TemplateType"></param>
            <param name="_maxAppVersion"></param>
            <param name="_ReferenceID"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Controls.Spreadsheet.SpreadsheetTemplateController.ImportCoreTemplates(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Attempt to import/update core spreadsheet templates
            </summary>
            <param name="_AppName">A List of SpreadsheetTemplateItems to import</param>
            <param name="_TemplateType">TemplateType</param>
            <param name="_maxAppVersion">Maximum version to import</param>
            <param name="_ReferenceID">ReferenceID</param>
            <param name="_importTestTemplates">Import templates from central with are marked as Test, default is False</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Spreadsheet.SpreadsheetTemplateController.MigrateCoreTemplatesToCentral(System.String,System.String)">
            <summary>
            Migrate local core templates to central server, if they do not yet exist
            NOTE: should only be run at inital setup
            </summary>
            <param name="_AppName">A List of SpreadsheetTemplateItems to import</param>
            <param name="_TemplateType">TemplateType</param>
            <param name="_maxAppVersion">Application version to import as</param>
            <param name="_ReferenceID">ReferenceID</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Spreadsheet.SpreadsheetTemplateController.ImportTemplates(System.Collections.Generic.List{IBSControlLibrary.Model.SpreadsheetTemplateItem},System.String,System.String)">
            <summary>
            Attempt to import spreadsheet templates
            </summary>
            <param name="_templatesToImport">A List of SpreadsheetTemplateItems to import</param>
            <param name="_TemplateType">TemplateType</param>
            <param name="_ReferenceID">ReferenceID</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Spreadsheet.SpreadsheetTemplateController.PerformMailMerge(IBSControlLibrary.Model.SpreadsheetTemplateItem,System.Data.DataSet)">
            <summary>
            Run a mail merge based on a saved template
            </summary>
            <param name="_template"></param>
            <param name="_dataSource"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Controls.Spreadsheet.SpreadsheetTemplateController.PerformMailMerge_GetFirst(IBSControlLibrary.Model.SpreadsheetTemplateItem,System.Data.DataSet)">
            <summary>
            Run a mail merge based on a saved template
            </summary>
            <param name="_template"></param>
            <param name="_dataSource"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Controls.Spreadsheet.SpreadsheetTemplateController.GenerateFile_Xlsx(IBSControlLibrary.Model.SpreadsheetTemplateItem,System.Data.DataSet,System.String)">
            <summary>
            Generates populated template in the form of an XLSX file
            </summary>
            <param name="_template"></param>
            <param name="_dataSource"></param>
            <param name="_fileName"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Controls.Spreadsheet.SpreadsheetTemplateController.GenerateFile_Xlsx(DevExpress.Spreadsheet.IWorkbook,System.String)">
            <summary>
            Generates populated template in the form of an XLSX file
            </summary>
            <param name="_workBook"></param>
            <param name="_fileName"></param>        
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Controls.Spreadsheet.SpreadsheetTemplateController.GenerateFile_Xlsx_AsBytes(IBSControlLibrary.Model.SpreadsheetTemplateItem,System.Data.DataSet)">
            <summary>
            Generates populated template in the form of a byte[]
            </summary>
            <param name="_template"></param>
            <param name="_dataSource"></param>        
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Controls.Spreadsheet.SpreadsheetTemplateController.GenerateFile_Xlsx_AsBytes(DevExpress.Spreadsheet.IWorkbook)">
            <summary>
            Generates populated template in the form of a byte[]
            </summary>
            <param name="_template"></param>
            <param name="_fileName"></param>        
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Controls.Spreadsheet.SpreadsheetTemplateController.GenerateFile_PDFAsync(IBSControlLibrary.Model.SpreadsheetTemplateItem,System.Data.DataSet,System.Boolean,System.String)">
            <summary>
            Aynchronously generates populated template in the form of a PDF file
            </summary>
            <param name="_template"></param>
            <param name="_dataSource"></param>
            <param name="_fileName"></param>
            <param name="_landscapeOrientation"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Controls.Spreadsheet.SpreadsheetTemplateController.GenerateFile_PDF(IBSControlLibrary.Model.SpreadsheetTemplateItem,System.Data.DataSet,System.Boolean,System.String)">
            <summary>
            Generates populated template in the form of a PDF file
            </summary>
            <param name="_template"></param>
            <param name="_dataSource"></param>
            <param name="_fileName"></param>
            <param name="_landscapeOrientation"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Controls.Spreadsheet.SpreadsheetTemplateController.GenerateFile_PDF(DevExpress.Spreadsheet.IWorkbook,System.Boolean,System.String)">
            <summary>
            Generates populated template in the form of a PDF file
            </summary>
            <param name="_workbook"></param>        
            <param name="_fileName"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Controls.Spreadsheet.SpreadsheetTemplateController.GenerateFile_PDF(System.String)">
            <summary>
            Generates populated template in the form of a PDF file
            </summary>            
            <param name="_filePath">Location of Excel file</param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Controls.Spreadsheet.SpreadsheetTemplateController.GenerateFile_PDF_DevEx(IBSControlLibrary.Model.SpreadsheetTemplateItem,System.Data.DataSet,System.String)">
            <summary>
            Generates populated template in the form of a PDF file using DevEx format
            </summary>
            <param name="_template"></param>
            <param name="_dataSource"></param>
            <param name="_pdfFilePath"></param>        
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Controls.Spreadsheet.SpreadsheetTemplateManager.ConstructorInit">
            <summary>
            Initialize the constructor
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Spreadsheet.SpreadsheetTemplateManager.INIT_Templates(System.String,System.Nullable{System.Guid})">
            <summary>
            Call to intialize templates
            </summary>
            <param name="_referenceID">Pass in reference ID (ie. ProjectID) if views need to be grouped by the ID</param>
            <param name="_loadTemplateID">Attempt to load with the passed in template ID instead of the group default</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Spreadsheet.SpreadsheetTemplateManager.INIT_DataSource">
            <summary>
            Set spreadsheet datasouce
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Spreadsheet.SpreadsheetTemplateManager.LOAD_TemplateList">
            <summary>
            Load all templates associated to the current TemplateType
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Spreadsheet.SpreadsheetTemplateManager.LoadTemplate(IBSControlLibrary.Model.SpreadsheetTemplateItem)">
            <summary>
            Load a template
            </summary>
            <param name="_template"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Spreadsheet.SpreadsheetTemplateManager.CreateNewTemplate(System.Boolean)">
            <summary>
            Create a new template
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Spreadsheet.SpreadsheetTemplateManager.SetButtonsEnabled">
            <summary>
            Set the template save/create/open button states
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Spreadsheet.SpreadsheetTemplateManager.ribbonBtnCreateTemplate_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
            <summary>
            Create new template click
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Spreadsheet.SpreadsheetTemplateManager.ribbonBtnSaveTemplate_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
            <summary>
            Ribbon Save Template clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Spreadsheet.SpreadsheetTemplateManager.ribbontBtnSaveAsNewTemplate_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
            <summary>
            Create a new template based on the current template
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Spreadsheet.SpreadsheetTemplateManager.ribbonBtnManageTemplates_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
            <summary>
            Manage/Open template click
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Spreadsheet.SpreadsheetTemplateManager.ribbonBtnFormatCheckBox_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
            <summary>
            [Custom Format] Checkbox Click
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Spreadsheet.SpreadsheetTemplateManager.barButtonFunctionHelp_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
            <summary>
            Launch Function Help
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Spreadsheet.SpreadsheetTemplateManager.ChangesMade">
            <summary>
            Check if there are changes to the current template
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Controls.Spreadsheet.SpreadsheetTemplateManager.ProcessCheckForChanges">
            <summary>
            If changes are made, prompt user to continue
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Controls.Spreadsheet.SpreadsheetTemplateManager.SaveTemplate">
            <summary>
            Save the current template
            </summary>
        </member>
        <member name="F:IBSControlLibrary.Controls.Spreadsheet.SpreadsheetTemplateManager.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Spreadsheet.SpreadsheetTemplateManager.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Spreadsheet.SpreadsheetTemplateManager.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Views.ViewLayoutManager.GridLayout_Load(System.Object,System.EventArgs)">
            <summary>
            Control Load
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Views.ViewLayoutManager.INIT_Views(System.Nullable{System.Guid})">
            <summary>
            Call to initialize ISupportXtraSerializer
            </summary>
            <param name="_referenceID">Pass in reference ID (ie. ProjetID) if views need to be grouped by the ID</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Views.ViewLayoutManager.InitNewItem(System.String,System.Boolean,System.Boolean)">
            <summary>
            Initialize a new View Layout Item
            </summary>
            <param name="layoutName"></param>
            <param name="isGroupDefault"></param>
            <param name="isCoreView"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Controls.Views.ViewLayoutManager.AddLayout(IBSControlLibrary.Model.ViewLayoutItem,System.Boolean)">
            <summary>
            Set the new layout as the selected view
            </summary>
            <param name="layoutItem"></param>
            <param name="setAsSelectedView"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Views.ViewLayoutManager.LOAD_LayoutList">
            <summary>
            Load all layouts associated to the current view control
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Views.ViewLayoutManager.LOAD_LayoutListDefaults">
            <summary>
            Load default layout associated to the current control
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Views.ViewLayoutManager.SetButtonsEnabled">
            <summary>
            Set the grid lookup edit button states
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Views.ViewLayoutManager.RefreshSelectedView">
            <summary>
            Reload the currently selected view
            </summary>
        </member>
        <member name="F:IBSControlLibrary.Controls.Views.ViewLayoutManager.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Views.ViewLayoutManager.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Views.ViewLayoutManager.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.DockPanelControl.ImplementShellTheme">
            <summary>
            Shell colors have changed
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.DockPanelControl.AddTabbedDockPanel(System.String,System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Nullable{System.Drawing.Color},System.Nullable{System.Drawing.Color})">
            <summary>
            Add a new tabbed dock panel
            </summary>
            <param name="_title"></param>
            <param name="_content"></param>
            <param name="_setAsActivePanel"></param>
            <param name="_customTabColor"></param>
            <param name="_panelBackColor"></param>
            <param name="_canClose"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.DockPanelControl.AddTabbedDockPanel(DevExpress.XtraBars.Docking.DockPanel)">
            <summary>
            Add a new tabbed dock panel
            </summary>
            <param name="_dockPanel"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.DockPanelControl.RemoveDockPanel(DevExpress.XtraBars.Docking.DockPanel)">
            <summary>
            Removes the passed in dock panel, if it exists
            </summary>
            <param name="_dockPanel"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.DockPanelControl.GetDockPanelRootControl(DevExpress.XtraBars.Docking.DockPanel)">
            <summary>
            Attempt to find the root control of a dock panel
            </summary>
            <param name="_panel"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.DockPanelControl.DockPanelExists(DevExpress.XtraBars.Docking.DockPanel)">
            <summary>
            Check if dock panel exists in the document manager collection
            </summary>
            <param name="_dockPanel"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.DockPanelControl.DockPanelExists(System.String)">
            <summary>
            Check if dock panel exists in the document manager collection
            </summary>
            <param name="_textTitle">Panel Text property</param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.DockPanelControl.DockPanelExists_ByControlName(System.String)">
            <summary>
            Check if dock panel exists in the document manager collection
            </summary>
            <param name="_controlName">Control Name</param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.DockPanelControl.FindDockPanel(System.String)">
            <summary>
            Attempt to find a dock panel based on dock panel text
            </summary>
            <param name="_textTitle">Panel Text property</param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.DockPanelControl.FindDockPanel_ByControlName(System.String)">
            <summary>
            Attempt to find a dock panel based on dock panel content control name
            </summary>
            <param name="_controlName">Panel Control Name</param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.DockPanelControl.FindDockPanel(System.Windows.Forms.Control)">
            <summary>
            Attempt to find a dock panel based on dock panel content control
            </summary>
            <param name="_controlName">Panel Control Name</param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.DockPanelControl.FindDocument(System.String)">
            <summary>
            Attempt to find a dock panel based on dock panel text
            </summary>
            <param name="_textTitle">Panel Text property</param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.DockPanelControl.FindDocument_ByControlName(System.String)">
            <summary>
            Attempt to find a dock panel based on Name of control within Dock Panel
            </summary>
            <param name="_controlName">Panel Control Name</param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.DockPanelControl.FindDocument(DevExpress.XtraBars.Docking.DockPanel)">
            <summary>
            Attempt to find a dock panel based on dock panel text
            </summary>
            <param name="_panel">Dock Panel</param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.DockPanelControl.FindDocument(System.Windows.Forms.Control)">
            <summary>
            Attempt to find a dock panel based on dock panel text
            </summary>
            <param name="_panel">Dock Panel</param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.DockPanelControl.FindActiveDocument">
            <summary>
            Attempts to find the active document
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.DockPanelControl.SetActiveDocument(DevExpress.XtraBars.Docking.DockPanel)">
            <summary>
            Activate the Document which contains the appropriate Dock Panel
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.DockPanelControl.SetActiveDocument(System.Windows.Forms.Control)">
            <summary>
            Activate the Document which contains the appropriate control
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.DockPanelControl.SetTabColor(System.String,System.Drawing.Color)">
            <summary>
            Set the tab to specified color
            </summary>
            <param name="_docTitle"></param>
            <param name="_color"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.DockPanelControl.SetTabColor(DevExpress.XtraBars.Docking2010.Views.Tabbed.Document,System.Drawing.Color)">
            <summary>
            Set the tab to specified color
            </summary>
            <param name="_doc"></param>
            <param name="_color"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.DockPanelControl.SetTabColorToTheme(System.String)">
            <summary>
            Set tab color to match theme
            </summary>
            <param name="_docTitle"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.DockPanelControl.SetTabColorToTheme(DevExpress.XtraBars.Docking2010.Views.Tabbed.Document)">
            <summary>
            Set tab color to match theme
            </summary>
            <param name="_doc"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.DockPanelControl.SetTabColorToTheme">
            <summary>
            Set all tabs to be match the theme header
            </summary>
            <param name="_doc"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.DockPanelControl.SetDockingState(DevExpress.XtraBars.Docking.DockPanel,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Set a panel's docking state, by default only allow panel movement within current dock manager
            </summary>
            <param name="_panel"></param>
            <param name="canOpenExternal"></param>
            <param name="canDockBottom"></param>
            <param name="canDockLeft"></param>
            <param name="canDockRight"></param>
            <param name="canDockTop"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.DockPanelControl.SetDefaultDockingState(DevExpress.XtraBars.Docking.DockPanel)">
            <summary>
            Set a panel's docking state, only allow panel movement within current dock manager
            </summary>
            <param name="_panel"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.DockPanelControl.DisposeAllDockPanels">
            <summary>
            Dispose of all dock panels
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.DockPanelControl.DOCK_MANAGER_ClosedPanel(System.Object,DevExpress.XtraBars.Docking.DockPanelEventArgs)">
            <summary>
            Dock Manager panel is closing
            Panel is being disposed of manually otherwise it just hides
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:IBSControlLibrary.Controls.Navigation.DockPanelControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.DockPanelControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.DockPanelControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.SelectionList.HookGlobalEvents">
            <summary>
            Hook global events
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.SelectionList.Globals_g_EVENT_FontTableChanged(System.Object,System.EventArgs)">
            <summary>
            Implements shell theme on font table change
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.SelectionList.Globals_g_EVENT_ColorTableChanged(System.Object,System.EventArgs)">
            <summary>
            Implements shell theme on color table change
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.SelectionList.ImplementShellTheme">
            <summary>
            Implements shell theme on current controls
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.SelectionList.Init(System.ComponentModel.BindingList{IBSControlLibrary.Controls.Navigation.SelectionListComponents.SelectionListItem})">
            <summary>
            Builds module item list
            </summary>
            <param name="_Items"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.SelectionList.Add(IBSControlLibrary.Interfaces.IShellMenuItem)">
            <summary>
            Add a new module item to Menu using property defaults from menu
            </summary>
            <param name="_item"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.SelectionList.SetSelected(IBSControlLibrary.Interfaces.IShellMenuItem,System.Boolean)">
            <summary>
            Set current module item as selected
            </summary>
            <param name="_item"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.SelectionList.SetSelected(System.Boolean)">
            <summary>
            Loops through module item collection setting first IsSelected control as selected
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.SelectionList.GetSelected">
            <summary>
            Returns selected menu item
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.SelectionList.SetUnselected(IBSControlLibrary.Interfaces.IShellMenuItem)">
            <summary>
            Set a Menu Item as unselected
            </summary>
            <param name="_m"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.SelectionList.DrawMenuItems">
            <summary>
            Draws the menu items
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.SelectionList.FindModuleMenuItemByID(System.Guid)">
            <summary>
            Find a Module Menu Item by its ID
            </summary>
            <param name="_ID"></param>
            <returns></returns>
        </member>
        <member name="F:IBSControlLibrary.Controls.Navigation.SelectionList.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.SelectionList.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.SelectionList.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.SelectionListComponents.SelectionListItem.HookGlobalEvents">
            <summary>
            Hook global events
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.SelectionListComponents.SelectionListItem.Globals_g_EVENT_FontTableChanged(System.Object,System.EventArgs)">
            <summary>
            Implements shell theme on font table change
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.SelectionListComponents.SelectionListItem.Globals_g_EVENT_ColorTableChanged(System.Object,System.EventArgs)">
            <summary>
            Implements shell theme on color table change
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.SelectionListComponents.SelectionListItem.ImplementShellTheme">
            <summary>
            Implements shell theme on current controls
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.SelectionListComponents.SelectionListItem.SetSelectedState">
            <summary>
            Override Set selected state
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.SelectionListComponents.SelectionListItem.Control_MouseEnter(System.Object,System.EventArgs)">
            <summary>
            Control mouse enter
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.SelectionListComponents.SelectionListItem.Control_MouseLeave(System.Object,System.EventArgs)">
            <summary>
            Control mouse leave
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.SelectionListComponents.SelectionListItem.Control_Click(System.Object,System.EventArgs)">
            <summary>
            Control clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.SelectionListComponents.SelectionListItem.PerformClick">
            <summary>
            Force the the button click event
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.SelectionListComponents.SelectionListItem.CanClick">
            <summary>
            Check if the button state will trigger a click event
            </summary>
            <returns></returns>
        </member>
        <member name="F:IBSControlLibrary.Controls.Navigation.SelectionListComponents.SelectionListItem.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.SelectionListComponents.SelectionListItem.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Navigation.SelectionListComponents.SelectionListItem.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Notifications.Notification_Dialog._BTN_OK_Click(System.Object,System.EventArgs)">
            <summary>
            OK Button Clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:IBSControlLibrary.Controls.Notifications.Notification_Dialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Notifications.Notification_Dialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Notifications.Notification_Dialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:IBSControlLibrary.Controls.Notifications.Notification_Status.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Notifications.Notification_Status.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Notifications.Notification_Status.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSModuleShell.IBSModuleShell_Load(System.Object,System.EventArgs)">
            <summary>
            Form Load
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSModuleShell.ControlClosing">
            <summary>
            Control is closing 
            </summary>
            <returns></returns>        
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSModuleShell.NAVIGATE_Content(System.Windows.Forms.UserControl)">
            <summary>
            Load Module Content
            </summary>
            <param name="_control"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSModuleShell.SetSaveState(IBSControlLibrary.GlobalEnums.SaveState)">
            <summary>
            Set the save button state
            </summary>
            <param name="_state"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSModuleShell.BUTTON_Save_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
            <summary>
            Save Button clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSModuleShell.BUTTON_Cancel_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
            <summary>
            Cancel Button Clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSModuleShell.BUTTON_Add_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
            <summary>
            Add Button Clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSModuleShell.BUTTON_Edit_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
            <summary>
            Edit Button Clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSModuleShell.BUTTON_Delete_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
            <summary>
            Delete Button Clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSModuleShell.BUTTON_Help_ItemClick(System.Object,DevExpress.XtraBars.ItemClickEventArgs)">
            <summary>
            Help Button Clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:IBSControlLibrary.Controls.Shell.IBSModuleShell.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSModuleShell.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSModuleShell.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSShellForm.HookGlobalEvents">
            <summary>
            Hook global events
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSShellForm.Globals_g_EVENT_FontTableChanged(System.Object,System.EventArgs)">
            <summary>
            Implements shell theme on font table change
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSShellForm.Globals_g_EVENT_ColorTableChanged(System.Object,System.EventArgs)">
            <summary>
            Implements shell theme on color table change
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSShellForm.ImplementShellTheme">
            <summary>
            Implements shell theme on current controls
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSShellForm.INIT_ShellForm(System.String)">
            <summary>
            Initialize application/project information automatically.
            NOTE: must be called in the top level application, from the parent thread of the application
            </summary>
            <param name="_connectionString">Connection string; needed to construct the ShellConnectedTo parameter</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSShellForm.INIT_AppConnection(System.String[],IBSControlLibrary.Model.Connection.AppEnvironment)">
            <summary>
            Initialize application connection object
            [REQUIRED] for control library database access (ie. GridView Layouts)
            </summary>
            <param name="connName"></param>
            <param name="_CommandLineArguments"></param>
            <param name="_environment"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSShellForm.INIT_AppConnection(System.String,System.String,System.String,IBSControlLibrary.Model.Connection.AppEnvironment)">
            <summary>
            Initialize application connection object
            [REQUIRED] for control library database access (ie. GridView Layouts)
            </summary>
            <param name="connName"></param>
            <param name="connStr"></param>
            <param name="_configName"></param>
            <param name="_configDisplayVal"></param>
            <param name="_environment"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSShellForm.ExecuteDBScripts">
            <summary>
            Execute DB scripts on current database
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSShellForm.DBScriptNeedsExecute">
            <summary>
            Check if any scripts need to run
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSShellForm.IBSShellForm_Load(System.Object,System.EventArgs)">
            <summary>
            Shell loading
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSShellForm.IBSShellForm_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            Form Closing
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSShellForm.SetThemeSkinColors">
            <summary>
            Set the DevExpress theme skin mask colors
            </summary>
            <param name="_primary"></param>
            <param name="_secondary"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSShellForm.SetThemeSkinColors(System.Drawing.Color,System.Nullable{System.Drawing.Color})">
            <summary>
            Set the DevExpress theme skin mask colors
            </summary>
            <param name="_primary"></param>
            <param name="_secondary"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSShellForm.SHELL_BTN_MENU_ElementClick(System.Object,DevExpress.XtraBars.Navigation.NavElementEventArgs)">
            <summary>
            SHELL MENU Button Clicked
                (Current)
                - Show/Hide side module panel
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSShellForm.SHELL_BTN_REFRESH_ElementClick(System.Object,DevExpress.XtraBars.Navigation.NavElementEventArgs)">
            <summary>
            SHELL MENU Button Clicked
                (Current)
                - Triggers Refresh functionality if IRefresh is implemented
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSShellForm.SHELL_BTN_ADMIN_ElementClick(System.Object,DevExpress.XtraBars.Navigation.NavElementEventArgs)">
            <summary>
            Shell Menu Adminstration Click
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSShellForm.SHELL_BTN_SETTINGS_ElementClick(System.Object,DevExpress.XtraBars.Navigation.NavElementEventArgs)">
            <summary>
            Shell Menu Settings Click
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSShellForm.NAVIGATE_ShellModule(System.Windows.Forms.Control)">
            <summary>
            Navigate to the desired IBSModuleShell
            </summary>
            <param name="_module"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSShellForm._NAVIGATE_TransitionTab(System.Int32)">
            <summary>
            Changes selected Content Tab
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSShellForm.NAVIGATE_BackNav_Open(IBSControlLibrary.Controls.Containers.BaseBackNavControl)">
            <summary>
            Navigate to a BackNavControl 
                (ie. Adminstration, Settings)
            </summary>
            <param name="_control">BaseBackNavControl</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSShellForm.NAVIGATE_BackNav_Close">
            <summary>
            Close a BackNavControl
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSShellForm.SHOW_PopupForm(IBSControlLibrary.Controls.Forms.IBSPopupForm,System.Windows.Forms.Form)">
            <summary>
            Display an IBSPopupForm with a greyed out background
            </summary>
            <param name="_Form"></param>
            <param name="_ParentForm"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSShellForm.SetMenuCloseState">
            <summary>
            Change the side menu expanded state
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSShellForm.SetSideMenuVisiblity">
            <summary>
            Set the side menu visibility
            </summary>
            <param name="_visible"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSShellForm.SetSideMenuVisiblity(System.Boolean)">
            <summary>
            Set the side menu visibility
            </summary>
            <param name="_visible"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSShellForm.UpdateCollapseMenuText(System.String)">
            <summary>
            Set the collapse menu text in the shell header when the side menu is collapsed
            By Default, the selected module name is displayed
            </summary>
            <param name="_overrideText"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSShellForm.SetShellContentProperties(System.Windows.Forms.Control)">
            <summary>
            Set the Shell Content Properties
            </summary>
            <param name="_module"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSShellForm.CheckImplementedInterfaces(System.Windows.Forms.Control)">
            <summary>
            Check for implemented interfaces
            ie. IShellRefresh
            </summary>
            <param name="_cont"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSShellForm.ConcateAppName">
            <summary>
            Concatenate the application name
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSShellForm.SetCentralConnection(System.String)">
            <summary>
            Set the connection string for the central admin connection
            </summary>
            <param name="_connectionString"></param>
        </member>
        <member name="F:IBSControlLibrary.Controls.Shell.IBSShellForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSShellForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.IBSShellForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_Module.HookGlobalEvents">
            <summary>
            Hook global events
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_Module.Globals_g_EVENT_FontTableChanged(System.Object,System.EventArgs)">
            <summary>
            Implements shell theme on font table change
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_Module.Globals_g_EVENT_ColorTableChanged(System.Object,System.EventArgs)">
            <summary>
            Implements shell theme on color table change
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_Module.ImplementShellTheme">
            <summary>
            Implements shell theme on current controls
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_Module.SetSelectedState">
            <summary>
            Override Set selected state
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_Module.SetIndicatorColor">
            <summary>
            Set indicator color
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_Module.OnEnabledChanged(System.EventArgs)">
            <summary>
            Enabled Changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_Module.Init(System.ComponentModel.BindingList{IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_SubModule})">
            <summary>
            Builds module item list
            </summary>
            <param name="_Items"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_Module.Add(IBSControlLibrary.Interfaces.IShellMenuItem)">
            <summary>
            Add a new module item to Menu using property defaults from menu
            </summary>
            <param name="_item"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_Module.SetSelected(IBSControlLibrary.Interfaces.IShellMenuItem,System.Boolean)">
            <summary>
            Set current module item as selected
            </summary>
            <param name="_item"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_Module.SetSelected(System.Boolean)">
            <summary>
            Loops through module item collection setting first IsSelected control as selected
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_Module.CancelItemNavigation">
            <summary>
            Reverts the selection state to the previously selected module
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_Module.GetSelected">
            <summary>
            Returns selected menu item
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_Module.SetUnselected(IBSControlLibrary.Interfaces.IShellMenuItem)">
            <summary>
            Set a Menu Item as unselected
            </summary>
            <param name="_m"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_Module.DrawMenuItems">
            <summary>
            Draws the menu items
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_Module.FindModuleMenuItemByID(System.Guid)">
            <summary>
            Find a Module Menu Item by its ID
            </summary>
            <param name="_ID"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_Module.SetControlExpanded">
            <summary>
            Set the expand state
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_Module.Control_MouseEnter(System.Object,System.EventArgs)">
            <summary>
            Control mouse enter
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_Module.Control_MouseLeave(System.Object,System.EventArgs)">
            <summary>
            Control mouse leave
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_Module.Control_Click(System.Object,System.EventArgs)">
            <summary>
            Control clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_Module.PerformClick">
            <summary>
            Force the the button click event
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_Module.CanClick">
            <summary>
            Check if the button state will trigger a click event
            </summary>
            <returns></returns>
        </member>
        <member name="F:IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_Module.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_Module.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_Module.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_SubModule.HookGlobalEvents">
            <summary>
            Hook global events
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_SubModule.Globals_g_EVENT_FontTableChanged(System.Object,System.EventArgs)">
            <summary>
            Implements shell theme on font table change
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_SubModule.Globals_g_EVENT_ColorTableChanged(System.Object,System.EventArgs)">
            <summary>
            Implements shell theme on color table change
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_SubModule.ImplementShellTheme">
            <summary>
            Implements shell theme on current controls
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_SubModule.SetSelectedState">
            <summary>
            Override Set selected state
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_SubModule.OnEnabledChanged(System.EventArgs)">
            <summary>
            Enabled Changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_SubModule.Control_MouseEnter(System.Object,System.EventArgs)">
            <summary>
            Control mouse enter
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_SubModule.Control_MouseLeave(System.Object,System.EventArgs)">
            <summary>
            Control mouse leave
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_SubModule.Control_Click(System.Object,System.EventArgs)">
            <summary>
            Control clicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_SubModule.PerformClick">
            <summary>
            Force the the button click event
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_SubModule.CanClick">
            <summary>
            Check if the button state will trigger a click event
            </summary>
            <returns></returns>
        </member>
        <member name="F:IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_SubModule.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_SubModule.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_SubModule.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.ModuleMenu.HookGlobalEvents">
            <summary>
            Hook global events
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.ModuleMenu.Globals_g_EVENT_FontTableChanged(System.Object,System.EventArgs)">
            <summary>
            Implements shell theme on font table change
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.ModuleMenu.Globals_g_EVENT_ColorTableChanged(System.Object,System.EventArgs)">
            <summary>
            Implements shell theme on color table change
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.ModuleMenu.ImplementShellTheme">
            <summary>
            Implements shell theme on current controls
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.ModuleMenu.Init(System.ComponentModel.BindingList{IBSControlLibrary.Controls.Shell.Menu.Components.MenuItem_Module})">
            <summary>
            Builds module item list
            </summary>
            <param name="_Items"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.ModuleMenu.Add(IBSControlLibrary.Interfaces.IShellMenuItem)">
            <summary>
            Add a new module item to Menu using property defaults from menu
            </summary>
            <param name="_item"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.ModuleMenu.SetSelected(IBSControlLibrary.Interfaces.IShellMenuItem,System.Boolean)">
            <summary>
            Set current module item as selected
            </summary>
            <param name="_item"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.ModuleMenu.SetSelected(System.Boolean)">
            <summary>
            Loops through module item collection setting first IsSelected control as selected
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.ModuleMenu.CancelItemNavigation">
            <summary>
            Reverts the selection state to the previously selected module
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.ModuleMenu.GetSelected">
            <summary>
            Returns selected menu item
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.ModuleMenu.GetPreviousSelected">
            <summary>
            Returns previously selected menu item
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.ModuleMenu.SetUnselected(IBSControlLibrary.Interfaces.IShellMenuItem)">
            <summary>
            Set a Menu Item as unselected
            </summary>
            <param name="_m"></param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.ModuleMenu.DrawMenuItems">
            <summary>
            Draws the menu items
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.ModuleMenu.FindModuleMenuItemByID(System.Guid)">
            <summary>
            Find a Module Menu Item by its ID
            </summary>
            <param name="_ID"></param>
            <returns></returns>
        </member>
        <member name="F:IBSControlLibrary.Controls.Shell.Menu.ModuleMenu.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.ModuleMenu.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:IBSControlLibrary.Controls.Shell.Menu.ModuleMenu.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.DXValidation.DXGridValidation.SetGridValidation(DevExpress.XtraGrid.Views.Grid.GridView,System.Collections.Generic.List{IBSControlLibrary.DXValidation.DXGridValidationItem},System.Int32)">
            <summary>
            Set grid validation
            </summary>
            <param name="_view"></param>
            <param name="_validationItems"></param>
            <param name="_rowHandle"></param>
        </member>
        <member name="M:IBSControlLibrary.DXValidation.DXGridValidation.SetFieldRequiredError(DevExpress.XtraGrid.Views.Grid.GridView,System.String)">
            <summary>
            Is Required Error Template
            </summary>
            <param name="_view"></param>
            <param name="_fieldName"></param>
        </member>
        <member name="P:IBSControlLibrary.DXValidation.DXProviderRules.RULE_FieldIsRequired">
            <summary>
            Rule to check if a field is empty
            </summary>
            <returns></returns>
        </member>
        <member name="T:IBSControlLibrary.Extensions.AsyncAwaitExtensions">
            <summary>
            Helper extensions to assist with async/await processing
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Extensions.AsyncAwaitExtensions.RunAsync``1(System.Func{``0})">
            <summary>
            Run a function asyncronously
            </summary>
            <typeparam name="T"></typeparam>
            <param name="codeToExecute"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Extensions.AsyncAwaitExtensions.RunAsync(System.Action)">
            <summary>
            Run an action asyncronously
            </summary>
            <typeparam name="T"></typeparam>
            <param name="codeToExecute"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Extensions.AsyncAwaitExtensions.ForEachAsync``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Func{``0,System.Threading.Tasks.Task})">
            <summary>
            Execute Tasks asynchronously
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="dop"></param>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.GridExtensions.ForceCommit(DevExpress.XtraGrid.Views.Grid.GridView)">
            <summary>
            Force the grid to commit data to underlying datasource
            </summary>
            <param name="view"></param>
        </member>
        <member name="M:IBSControlLibrary.GridExtensions.FormatAsList(DevExpress.XtraGrid.Views.Grid.GridView)">
            <summary>
            Removes group footer, new item row, group panel
            </summary>
        </member>
        <member name="M:IBSControlLibrary.GridExtensions.ClearGrid(DevExpress.XtraGrid.GridControl)">
            <summary>
            Removes the grid's datasource and columns
            </summary>
        </member>
        <member name="M:IBSControlLibrary.GridExtensions.LockColumn(DevExpress.XtraGrid.Columns.GridColumn)">
            <summary>
            Locks a column in places, removing movement, sizing, filter and sort capabilities, etc...
            </summary>
            <param name="col"></param>
        </member>
        <member name="M:IBSControlLibrary.GridExtensions.AddRepository_Enum``1(DevExpress.XtraGrid.Columns.GridColumn)">
            <summary>
            Creates a combo box repository based off enumeration values
            </summary>
            <typeparam name="T"></typeparam>
            <param name="col"></param>
        </member>
        <member name="M:IBSControlLibrary.GridExtensions.AddRepository_ProgressEdit(DevExpress.XtraGrid.Columns.GridColumn,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Create a new progress bar editor
            </summary>
            <param name="col"></param>
            <param name="_detail"></param>
            <param name="_size"></param>
        </member>
        <member name="M:IBSControlLibrary.GridExtensions.AddRepository_MRU(DevExpress.XtraGrid.Columns.GridColumn,System.Object[])">
            <summary>
            Add mru editor to a grid column
            </summary>
            <param name="col"></param>
        </member>
        <member name="M:IBSControlLibrary.GridExtensions.AddRepository_Link(DevExpress.XtraGrid.Columns.GridColumn)">
            <summary>
            Adds a new hyperlink editor to a grid column
            </summary>
            <param name="col"></param>
        </member>
        <member name="M:IBSControlLibrary.GridExtensions.AddRepository_DeleteEdit(DevExpress.XtraGrid.Columns.GridColumn,System.Boolean)">
            <summary>
            Creates a repository edit 
            </summary>
            <param name="column"></param>
            <param name="_useGridTheme"></param>
        </member>
        <member name="T:IBSControlLibrary.UIExtensions">
            <summary>
            Helper methods to assist with UI related operations
            </summary>
        </member>
        <member name="M:IBSControlLibrary.UIExtensions.ExecuteWithProgress(System.Windows.Forms.Control,System.Action,System.String,System.String)">
            <summary>
            Executes processing asynchronously while displaying a progress panel
            NOTE: code cannot target UI inside processing code
            </summary>
            <param name="control"></param>
            <param name="codeToExecute"></param>
            <param name="caption"></param>
            <param name="description"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.UIExtensions.ResetBinding(System.Windows.Forms.Control,System.Windows.Forms.Binding)">
            <summary>
            Clears and re-adds a controls data bindings
            </summary>
            <param name="cont"></param>
            <param name="_binding"></param>
        </member>
        <member name="T:IBSControlLibrary.IBSCategory">
            <summary>
            Defaults the property to the _IBS designer category
            </summary>
        </member>
        <member name="M:IBSControlLibrary.IBSCategory.#ctor">
            <summary>
            Base constructor
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Interfaces.IControlClose.IsDirty">
            <summary>
            Edit State of the current control
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Interfaces.IControlClose.ControlClosing">
            <summary>
            Action to be performed when the Shell is Closing
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Interfaces.IShellNavigate.NavigateFrom">
            <summary>
            Control is being navigated from
            </summary>        
            <returns>Return FALSE if you wish to cancel navigation</returns>
        </member>
        <member name="M:IBSControlLibrary.Interfaces.IShellNavigate.NavigateTo">
            <summary>
            Control is being navigated To
            </summary>        
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Interfaces.IShellRefresh.ShellRefresh">
            <summary>
            Action to be performed when the Shell refresh has been clicked
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Interfaces.IShellUI.ImplementShellTheme">
            <summary>
            Set any controls to match theme colors
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Model.BaseEntity.PopulateObjectEdit(System.Data.DataRow)">
            <summary>
            Populate Date Created/Modified fields
            </summary>
            <param name="_row"></param>
        </member>
        <member name="M:IBSControlLibrary.Model.BaseEntity.HasChanges(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Check for changes of a List which contains base entity
            </summary>
            <param name="_list"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Model.BaseEntity.NotifyPropertyChanged">
            <summary>
            Update the object state when a property changes
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="P:IBSControlLibrary.Model.Color.ColorTable.DEVEX_COLORMIXER_SKIN_PRIMARY">
            <summary>
            NOTE: DEV EX Color mixer does not currently work 100% passing in an RGB value, this is a work around property
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Model.Color.ColorTable.DEVEX_COLORMIXER_SKIN_SECONDARY">
            <summary>
            NOTE: DEV EX Color mixer does not currently work 100% passing in an RGB value, this is a work around property
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Model.Color.ColorTable.InitializeColorDefaults">
            <summary>
            Generate the defaults for a color table
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Model.Color.ColorTable.GetColorItem(System.String)">
            <summary>
            Get custom color item by property name
            Will return NULL if property is not found
            </summary>
            <param name="_colorItemName"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Model.Color.ColorTable.GetColorItem_Color(System.String)">
            <summary>
            Get custom color item VALUE by property name
            Will return NULL if property is not found
            </summary>
            <param name="_colorItemName"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Model.Color.ColorTable.AddColorItem(System.String,System.Drawing.Color,System.String)">
            <summary>
            Add a new Color item to the color table
            </summary>
            <param name="_colorItemName"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Model.Connection.#ctor(System.String,System.String[],IBSControlLibrary.Model.Connection.AppEnvironment)">
            <summary>
            Using the passed in Command Line Arguments, attempts to generate connection property values
            </summary>
            <param name="connName"></param>
            <param name="_CommandLineArguments"></param>
            <param name="_environment"></param>
        </member>
        <member name="M:IBSControlLibrary.Model.Connection.CanConnect">
            <summary>
            Check if ConnectionString is not null or empty and Test the connection
            else return false
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Model.SpreadsheetTemplateItem.PopulateObject(System.Object)">
            <summary>
            Populates the object from a datarow
            </summary>
            <param name="_objectRow"></param>
        </member>
        <member name="M:IBSControlLibrary.Model.SpreadsheetTemplateItem.InitCoreTemplate">
            <summary>
            Initialize as a core view
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Model.SpreadsheetTemplateItem.Save(System.Boolean,System.Object[])">
            <summary>
            Save 
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Model.SpreadsheetTemplateItem.Delete(System.Boolean,System.Boolean,System.Object[])">
            <summary>
            Delete 
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Model.SpreadsheetTemplateItem.SetAsGroupDefault(System.Object[])">
            <summary>
            Set Template as the group default
            </summary>
            <param name="passedParams"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Model.SpreadsheetTemplateItem.GET_Layout(DevExpress.Spreadsheet.IWorkbook,System.Object[])">
            <summary>
            Get Layout data from control/interface
            </summary>
            <param name="_workbook"></param>
            <param name="passedParams"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Model.SpreadsheetTemplateItem.RESTORE_Layout(DevExpress.Spreadsheet.IWorkbook,System.Object[])">
            <summary>
             Restore the saved template to a IWorkBook
            </summary>
            <param name="_controlInterface"></param>
            <param name="passedParams"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Model.SpreadsheetTemplateItem.RESTORE_TemplateLayout(DevExpress.Spreadsheet.IWorkbook,System.String)">
            <summary>
            Restore the saved template to a file
            </summary>
            <param name="_workbook"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Model.SpreadsheetTemplateItem.LOAD_LayoutData(System.Object[])">
            <summary>
            Get the Template Layout data from the database
            </summary>
            <param name="passedParams"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Model.SpreadsheetTemplateItem.POPULATE_Layout(System.Object[])">
            <summary>
            Populate the Layout property from database
            </summary>
            <param name="passedParams"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Model.ViewLayoutItem.PopulateObject(System.Object)">
            <summary>
            Populates the object from a datarow
            </summary>
            <param name="_rowObject"></param>
        </member>
        <member name="M:IBSControlLibrary.Model.ViewLayoutItem.Save(System.Boolean,System.Object[])">
            <summary>
            Save layout item
            </summary>
            <param name="_updateCentral"></param>
            <param name="passedParams"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Model.ViewLayoutItem.CanSaveLayout">
            <summary>
            Quick fix to check for duplicates in the database when developer is calling the LayoutItem save
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Model.ViewLayoutItem.Delete(System.Boolean,System.Boolean,System.Object[])">
            <summary>
            Delete layout
            </summary>
            <param name="_updateCentral"></param>
            <param name="_deleteCentralOnly"></param>
            <param name="passedParams"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Model.ViewLayoutItem.InitCoreView">
            <summary>
            Initialize as a core view
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Model.ViewLayoutItem.SetAsUserDefault(System.Object[])">
            <summary>
            Set current view as user's default 
            </summary>
            <param name="passedParams"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Model.ViewLayoutItem.SetAsGroupDefault(System.Object[])">
            <summary>
            Set current view as the layout group default
            </summary>
            <param name="passedParams"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Model.ViewLayoutItem.SetAsGlobal(System.Object[])">
            <summary>
            Set current view as a Global view
            </summary>
            <param name="passedParams"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Model.ViewLayoutItem.GET_Layout(DevExpress.Utils.Serializing.ISupportXtraSerializer,System.Object[])">
            <summary>
            Generate the ISupportXtraSerializer control layout string and set Layout property
            </summary>
            <param name="_layoutConverterControl"></param>
            <param name="passedParams"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Model.ViewLayoutItem.RESTORE_Layout(DevExpress.Utils.Serializing.ISupportXtraSerializer,System.Object[])">
            <summary>
            Restore layout to ISupportXtraSerializer control
            </summary>
            <param name="_layoutConverterControl"></param>
            <param name="passedParams"></param>
        </member>
        <member name="M:IBSControlLibrary.Model.ViewLayoutItem.POPULATE_Layout(System.Object[])">
            <summary>
            Load layout from database and assign to Layout property
            </summary>
            <param name="passedParams"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Model.ViewLayoutItem.LOAD_LayoutData(System.Object[])">
            <summary>
            Load and populate Layout property from database
            </summary>
            <param name="passedParams"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Model.ViewLayoutItem.GeneratePrintingSystem">
            <summary>
            Generate printing system options
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Model.ViewLayoutItem.GeneratePrintOptionsString">
            <summary>
            Generate the PrintOptions string
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Model.Fonts.FontTable.InitializeFontSizes">
            <summary>
            Generate the defaults for the font table sized
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Model.Fonts.FontTable.InitializeFontDefaults">
            <summary>
            Generate the defaults for a font table
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Model.Fonts.FontTable.GetFontItem(System.String)">
            <summary>
            Get custom font item by property name
            Will return NULL if property is not found
            </summary>
            <param name="_colorItemName"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Model.Fonts.FontTable.GetFontItem_Font(System.String)">
            <summary>
            Get custom font item VALUE by property name
            Will return BASE_FONT if property is not found
            </summary>
            <param name="_colorItemName"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Model.Fonts.FontTable.AddFontItem(System.String,System.Drawing.Font)">
            <summary>
            Add a new Font item to the color table
            </summary>
            <param name="_colorItemName"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Model.GridLayoutItem.PopulateObject(System.Data.DataRow)">
            <summary>
            Populates the object from a datarow
            </summary>
            <param name="_row"></param>
        </member>
        <member name="M:IBSControlLibrary.Model.GridLayoutItem.Save(System.String)">
            <summary>
            Save 
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Model.GridLayoutItem.Delete(System.String)">
            <summary>
            Delete 
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Model.GridLayoutItem.InitCoreView">
            <summary>
            Initialize as a core view
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Model.GridLayoutItem.SetAsMyDefaultView(System.String)">
            <summary>
            Set current layout as the users default view
            </summary>
            <param name="DBConnection"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Model.GridLayoutItem.SetAsGroupDefaultView(System.String)">
            <summary>
            Set current layout as the the layout group default view
            </summary>
            <param name="DBConnection"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Model.GridLayoutItem.SetAsGlobal(System.String)">
            <summary>
            Set current layout as a global view
            </summary>
            <param name="DBConnection"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Model.GridLayoutItem.GENERATE_GridLayoutViewString(DevExpress.XtraGrid.Views.Grid.GridView)">
            <summary>
            Generate the grid view layout string and set LayoutXML property
            </summary>
            <param name="_view"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Model.GridLayoutItem.GET_GridLayoutViewString(DevExpress.XtraGrid.Views.Grid.GridView)">
            <summary>
            Get xml layout string from GridView
            </summary>
            <param name="_view"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Model.GridLayoutItem.RESTORE_GridLayoutView(DevExpress.XtraGrid.Views.Grid.GridView)">
            <summary>
            Get xml layout string from GridView
            </summary>
            <param name="_view"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Model.GridLayoutItem.GetLayoutXML">
            <summary>
            Get the Layout XML string from the database
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Model.GridLayoutItem.GeneratePrintingSystem">
            <summary>
            Generate printing system options
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Model.GridLayoutItem.GeneratePrintOptionsString">
            <summary>
            Generate the PrintOptions string
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Notifications.MessageHelper.DisplayErrorModal(System.String,System.String,System.Windows.Forms.Form)">
            <summary>
            If the shell notification controller does not exist, a default message box will be used
            </summary>
            <param name="message"></param>
            <param name="caption"></param>
        </member>
        <member name="M:IBSControlLibrary.Notifications.MessageHelper.DisplayWarningModal(System.String,System.String,System.Windows.Forms.Form)">
            <summary>
            If the shell notification controller does not exist, a default message box will be used
            </summary>
            <param name="message"></param>
            <param name="caption"></param>
        </member>
        <member name="M:IBSControlLibrary.Notifications.MessageHelper.DisplayInfoModal(System.String,System.String,System.Windows.Forms.Form)">
            <summary>
            If the shell notification controller does not exist, a default message box will be used
            </summary>
            <param name="message"></param>
            <param name="caption"></param>
        </member>
        <member name="M:IBSControlLibrary.Notifications.MessageHelper.DisplayWarningQuestionModal(System.String,System.String,System.Windows.Forms.Form)">
            <summary>
            If the shell notification controller does not exist, a default message box will be used
            </summary>
            <param name="message"></param>
            <param name="caption"></param>
        </member>
        <member name="M:IBSControlLibrary.Notifications.NotificationController.ShowQuestionDialog(System.String,System.String,System.Windows.Forms.Form,System.Int32,IBSControlLibrary.GlobalEnums.FlyoutDialogType,System.Int32)">
            <summary>
            Display a QUESTION flyout dialog
            </summary>
            <param name="_title"></param>
            <param name="_message"></param>
            <param name="_parent"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Notifications.NotificationController.ShowInfoDialog(System.String,System.String,System.Windows.Forms.Form,System.Int32,IBSControlLibrary.GlobalEnums.FlyoutDialogType,System.Int32)">
            <summary>
            Display an INFO flyout dialog
            </summary>
            <param name="_title"></param>
            <param name="_message"></param>
            <param name="_parent"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Notifications.NotificationController.ShowWarningDialog(System.String,System.String,System.Windows.Forms.Form,System.Int32,IBSControlLibrary.GlobalEnums.FlyoutDialogType,System.Int32)">
            <summary>
            Display an Warning flyout dialog
            </summary>
            <param name="_title"></param>
            <param name="_message"></param>
            <param name="_parent"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Notifications.NotificationController.ShowWarningYesNoDialog(System.String,System.String,System.Windows.Forms.Form,System.Int32,IBSControlLibrary.GlobalEnums.FlyoutDialogType,System.Int32)">
            <summary>
            Display an Warning (YES/NO) flyout dialog
            </summary>
            <param name="_title"></param>
            <param name="_message"></param>
            <param name="_parent"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Notifications.NotificationController.ShowErrorDialog(System.String,System.String,System.Windows.Forms.Form,System.Int32,IBSControlLibrary.GlobalEnums.FlyoutDialogType,System.Int32)">
            <summary>
            Display an ERROR flyout dialog
            </summary>
            <param name="_title"></param>
            <param name="_message"></param>
            <param name="_parent"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Notifications.NotificationController.ShowStatusFlyout(System.String,IBSControlLibrary.GlobalEnums.FlyoutState,System.Windows.Forms.Control,IBSControlLibrary.GlobalEnums.FlyoutClose,System.Int32,System.Int32)">
            <summary>        
            Displays a flyout notification        
            </summary>
            <param name="_text"></param>
            <param name="_ownerControl">Uses main shell form by default</param>        
            <param name="_state"></param>
            <param name="_closeType"></param>
            <param name="_autoCloseTimer"></param>
            <param name="_height">flyout height</param>
        </member>
        <member name="M:IBSControlLibrary.Notifications.NotificationController.HideNotification">
            <summary>
            Internal: Do Not Use
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Notifications.NotificationController._DialogControl_DialogResultSelected(System.Object,System.EventArgs)">
            <summary>
            Dialog result selected
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Notifications.NotificationController.GetStatusColor(IBSControlLibrary.GlobalEnums.FlyoutState)">
            <summary>
            Get a color based on the flyout state
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Notifications.NotificationController.GetStatusColor(IBSControlLibrary.GlobalEnums.FlyoutDialogState)">
            <summary>
            Get a color based on the flyout state dialog
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Notifications.Alerts.MessageType.Name">
            <summary>
            Required; Duplicates will be filtered out
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Notifications.Alerts.MessageType.Title">
            <summary>
            Required
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Notifications.Alerts.MessageType.TimerCount">
            <summary>
            If no timer provided, message will remain until user closes it
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Notifications.Alerts.MessageType.MaximumCount">
            <summary>
            Indicates maximum messages that can appear for a specific [Message Type]. If no max is provided, default is 1. Another message will not appear for this Message Type unless user closes the current.
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Notifications.Alerts.ToastControl._Alert_FormLoad(System.Object,DevExpress.XtraBars.Alerter.AlertFormLoadEventArgs)">
            <summary>
            sets when/if the alert form will close - called when each alert form is loaded
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Notifications.Alerts.ToastControl._Alert_FormClosing(System.Object,DevExpress.XtraBars.Alerter.AlertFormClosingEventArgs)">
            <summary>
            decrease the opened instance count for the message type - called when each alert form is closed
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:IBSControlLibrary.Notifications.Alerts.ToastControl.Show(System.String)">
            <summary>
            Displays an alert window.                                         
            </summary>
            <param name="owner"></param>
            <param name="caption"></param>
            <param name="text"></param>
            <param name="messageTypeName"></param>
            <param name="alertType"></param>
            <param name="timerCount"></param>
        </member>
        <member name="M:IBSControlLibrary.Notifications.Alerts.ToastControl.AlertCanShow(IBSControlLibrary.Notifications.Alerts.MessageType)">
            <summary>
            Checks if alert can be shown or not
            </summary>
            <param name="messType"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Notifications.Alerts.ToastControl.LoadImage(IBSControlLibrary.Notifications.Alerts.AlertType)">
            <summary>
            Image - Alert Type (warning, information, error)
            </summary>
            <param name="alertType"></param>
            <returns></returns>
        </member>
        <member name="T:IBSControlLibrary.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Add_New">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.AddNew_Darker_96">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.AddNew_White_96">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.AddNew32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.AddNew32_Dark">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.AddNewCircle_White_96">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Alarm_Clock">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Arrowhead_Left_NoPadding">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Arrowhead_Right">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Arrowhead_Right_Dark32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Arrowhead_Right_Gray32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Arrowhead_Right_Trans">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.ArrowheadDown24">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.ArrowheadLeft_NoPadding_24">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.ArrowheadRight_256_DarkTrans">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.ArrowheadRight_256_LightTrans">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.ArrowheadUp24">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.article_16x16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.article_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Cancel32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Cancel32_Dark">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Check32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Check48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.CheckGreen_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Clipboard">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.ConditionalFormatting32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.ConditionalFormatting32_Dark">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.ConnectToComputer24">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Copy">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.CopyHover">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Dashboard">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Data_Edit32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.DataEdit_192_DarkTrans">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.DataEdit_192_DarkTrans1">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.DataEdit_192_DarkTrans2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.DataEdit128">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.DataEdit192_Trans">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.DataEdit32_Dark">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.DocFade2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.emptyIndicator">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Error_128">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Error48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Error48_Red">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.EstimateFade">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.ExcelExport32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.ExcelExport32_Dark">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.ExcelExport321">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.ExpanderDown">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.ExpanderDown16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.ExpanderDownDark16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.ExpanderLeftDarkGray">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.ExpanderLeftGray">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.ExpanderLeftWhite">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.ExpanderRightDarkGray">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.ExpanderRightGray">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.ExpanderRightWhite">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.ExpanderUp">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.ExpanderUp16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.ExpanderUpDark16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Filter32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Filter32_Dark">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Garbage32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Garbage32_Dark">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Help32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Help32_Dark">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Info">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Information48_Blue">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Key_Access24">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.KeyAccess32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Layouts">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Layouts_Darker_64">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Layouts_Darker_96">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Menu_32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Menu256">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Message_Information48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.MessageInformation_128">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Navigation_192_DarkTrans">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.PCLLogoGrayTrans">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Picture32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Picture32_Dark">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Preview32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Preview32_dark">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Previous32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Printer32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Printer32_Dark">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Question_128">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Refresh32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Refresh32_Dark">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Report32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Report32_Dark">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.save_16x16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.save_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Save32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Save32_Dark">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.SaveDark_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Settings_192_DarkTrans">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Settings128">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Settings256">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Settings32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Team_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.template_16x16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.template_32x32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Tools_192_DarkTrans">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Tools256">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Tools32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Tools32_Dark">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.trash">
            <summary>
              Looks up a localized resource of type DevExpress.Utils.Svg.SvgImage.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.User_16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.UserEarth32">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.UserLogin24">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Warning128">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Warning48">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.Warning48_Yellow">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.WindowOpen">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.Properties.Resources.WindowOpen32_Dark">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:IBSControlLibrary.SQLScripts">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.SQLScripts.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.SQLScripts.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:IBSControlLibrary.SQLScripts.GenericClearGridView">
             <summary>
               Looks up a localized string similar to -- Version [1.0.0] (SCM)
            -- Clear all generic grid view tables and stored procedures
            
            -- CLEAR Defaults
            IF EXISTS (SELECT t.Name FROM sys.tables t INNER JOIN sys.schemas s ON s.schema_id = t.schema_id WHERE s.name = &apos;GridViews&apos; AND t.Name = &apos;Defaults&apos;)
            BEGIN
            	DROP TABLE [GridViews].[Defaults]
            END
            GO
            
            -- CLEAR GridViews
            IF EXISTS (SELECT t.Name FROM sys.tables t INNER JOIN sys.schemas s ON s.schema_id = t.schema_id WHERE s.name = &apos;GridViews&apos; AND t.Name = &apos;Layouts&apos;)
            BEGIN
            	DROP TABLE [GridViews]. [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:IBSControlLibrary.SQLScripts.GenericClearSpreadsheet">
             <summary>
               Looks up a localized string similar to -- Version [1.0.0] (SCM)
            -- Clear all generic spreadsheet tables and stored procedures
            
            -- CLEAR Templates
            IF EXISTS (SELECT t.Name FROM sys.tables t INNER JOIN sys.schemas s ON s.schema_id = t.schema_id WHERE s.name = &apos;ControlLibrary&apos; AND t.Name = &apos;SpreadsheetTemplates&apos;)
            BEGIN
            	DROP TABLE [ControlLibrary].[SpreadsheetTemplates]
            END
            GO
            
            -- CLEAR Settings
            IF EXISTS (SELECT t.Name FROM sys.tables t INNER JOIN sys.schemas s ON s.schema_id = t.schema_id WHERE s.name = &apos;ControlLibrary&apos; AND t.Name = &apos;S [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:IBSControlLibrary.SQLScripts.GenericGridViewCreate">
             <summary>
               Looks up a localized string similar to -- Version [1.0.0] (SCM)
            -- SCRIPT TO CREATE DEFAULT GridViews Layout Saving
            
            -- CREATE [GridViews] Schema if one does not yet exist
            IF EXISTS (SELECT * FROM sys.schemas WHERE name = N&apos;GridViews&apos;)
            BEGIN
            	DROP SCHEMA [GridViews]
            END
            
            GO
            CREATE SCHEMA [GridViews] AUTHORIZATION [dbo]
            
            GO
            
            CREATE TABLE [GridViews].[Layouts](
            	[ID] [uniqueidentifier] ROWGUIDCOL  NOT NULL,
            	[Layout] [varchar](100) NOT NULL,
            	[LayoutDesc] [varchar](255) NULL,
            	[LayoutXML] [xml] NOT NULL,	
            	[LayoutGroup] [varchar [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:IBSControlLibrary.SQLScripts.GenericSpreadsheet_1_1">
             <summary>
               Looks up a localized string similar to -- Version [1.1.0] (SCM)
            -- ADD Additional Columns for centralized setup
            
            ALTER TABLE ControlLibrary.SpreadsheetTemplates
            ADD AppName VARCHAR(100) NOT NULL DEFAULT(&apos;&apos;)
            GO
            
            ALTER TABLE ControlLibrary.SpreadsheetTemplates
            ADD AppVersion VARCHAR(20) NULL
            GO
            
            ALTER TABLE ControlLibrary.SpreadsheetTemplates
            ADD IsTest BIT NULL DEFAULT(0)
            GO
            
            
            ALTER PROCEDURE [ControlLibrary].[SaveSpreadsheetTemplate]
            	-- Add the parameters for the stored procedure here
            	@ID					uniqueidentifier = NULL,
            	@Name	 [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:IBSControlLibrary.SQLScripts.GenericSpreadsheetCreate">
             <summary>
               Looks up a localized string similar to -- Version [1.0.0] (SCM)
            -- SCRIPT TO CREATE DEFAULT Spreadsheet Template Saving
            
            -- CREATE [Spreadsheet] Schema if one does not yet exist
            --IF EXISTS (SELECT * FROM sys.schemas WHERE name = N&apos;Spreadsheet&apos;)
            --BEGIN
            --	DROP SCHEMA [Spreadsheet]
            --END
            
            --GO
            --CREATE SCHEMA [Spreadsheet] AUTHORIZATION [dbo]
            
            --GO
            
            CREATE TABLE [ControlLibrary].[SpreadsheetTemplates](
            			 [ID] [uniqueidentifier] ROWGUIDCOL  NOT NULL,
            			 [Name] [varchar](100) NOT NULL,
            			 [Description] [varchar](255) NULL,
            		 [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:IBSControlLibrary.SQLScripts.GridView_v1_0_0">
             <summary>
               Looks up a localized string similar to 
            UPDATE GridViews.ShellSettings
            SET SettingValue = &apos;1.0.1&apos;
            WHERE SettingName = &apos;ShellDBVersion&apos;.
             </summary>
        </member>
        <member name="P:IBSControlLibrary.SQLScripts.SettingsCreate">
             <summary>
               Looks up a localized string similar to -- Version [1.0.0] (SCM)
            -- SCRIPT TO CREATE DEFAULT Spreadsheet Settings
            
            -- CREATE [Spreadsheet] Schema if one does not yet exist
            IF EXISTS (SELECT * FROM sys.schemas WHERE name = N&apos;ControlLibrary&apos;)
            BEGIN
            	DROP SCHEMA [ControlLibrary]
            END
            GO
            
            CREATE SCHEMA [ControlLibrary] AUTHORIZATION [dbo]
            
            GO
            
            CREATE TABLE [ControlLibrary].[Settings](
            			[SettingName] [varchar](100) NOT NULL,
            			[SettingValue] [varchar](255) NOT NULL,
            			[CreatedDateTime] [datetime] NOT NULL,
            			[CreatedBy] [varchar] [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="M:IBSControlLibrary.Data.ADUser.GetUserFullName(System.String,IBSControlLibrary.Model.User)">
            <summary>
            Get User Object from active directory
            </summary>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Data.ADUser.GetUserInfo(System.String,System.String,IBSControlLibrary.Model.User)">
            <summary>
            Get User Object from active directory
            </summary>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Data.Spreadsheets.DBSettings.GetSettingValue(System.String)">
            <summary>
            Get the shell setting value
            </summary>
            <param name="layoutGroupName"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Data.Spreadsheets.DBSettings.UpdateSettingValue(System.String,System.String)">
            <summary>
            Update setting value
            </summary>
            <param name="settingName"></param>
            <param name="settingValue"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Data.Spreadsheets.DBSpreadsheetTemplates.LoadDT_Templates(System.String,System.String)">
            <summary>
            Load Templates
            </summary>
            <param name="layoutType"></param>
            <param name="_referenceID"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Data.Spreadsheets.DBSpreadsheetTemplates.LoadList_Templates(System.String,System.String)">
            <summary>
            Load templates as list of SpreadsheetTemplateItem
            </summary>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Data.Spreadsheets.DBSpreadsheetTemplates.Load_TemplateByID(System.Guid)">
            <summary>
            Load a template by its ID
            </summary>
            <param name="_TemplateID"></param>        
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Data.Spreadsheets.DBSpreadsheetTemplates.LoadTemplateLayout(System.Guid)">
            <summary>
            Load the TemplateLayout
            </summary>
            <param name="_TemplateID"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Data.Spreadsheets.DBSpreadsheetTemplates.LoadDT_Templates_Central(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Load Templates
            </summary>
            <param name="layoutType"></param>
            <param name="_referenceID"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Data.Spreadsheets.DBSpreadsheetTemplates.LoadList_CentralTemplates(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Load templates as list of SpreadsheetTemplateItem
            </summary>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Data.Spreadsheets.DBSpreadsheetTemplates.SaveTemplate(IBSControlLibrary.Model.SpreadsheetTemplateItem,System.Byte[])">
            <summary>
            Save Template
            </summary>
            <param name="_templateItem"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Data.Spreadsheets.DBSpreadsheetTemplates.SaveTemplateLayout(IBSControlLibrary.Model.SpreadsheetTemplateItem,System.Byte[])">
            <summary>
            Save Template Layout
            </summary>
            <param name="_templateItem"></param>
            <param name="_templateLayout"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Data.Spreadsheets.DBSpreadsheetTemplates.PopulateLayoutParameters(System.Data.SqlClient.SqlCommand,IBSControlLibrary.Model.SpreadsheetTemplateItem)">
            <summary>
            Populate the Tempalate Layout parameters
            </summary>
            <param name="cmd"></param>
            <param name="_obj"></param>
        </member>
        <member name="M:IBSControlLibrary.Data.Spreadsheets.DBSpreadsheetTemplates.SetViewAsTypeDefault(IBSControlLibrary.Model.SpreadsheetTemplateItem)">
            <summary>
            Set template as the default for the current layout type
            Requires [IsDevelopmentMode] set to True
            </summary>
            <param name="_layoutItem"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Data.Spreadsheets.DBSpreadsheetTemplates.DeleteTemplate(IBSControlLibrary.Model.SpreadsheetTemplateItem)">
            <summary>
            Delete template
            </summary>
            <param name="_templateItem"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Data.GridViews.DBGridViews.LoadDT_GridLayout(System.String,System.Nullable{System.Guid})">
            <summary>
            Load Grid Layouts
            </summary>
            <param name="layoutGroupName"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Data.GridViews.DBGridViews.LoadList_GridLayout(System.String,System.Nullable{System.Guid})">
            <summary>
            Load grid layouts as list of grid layout items
            </summary>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Data.GridViews.DBGridViews.LoadList_ViewLayout(System.String,System.Nullable{System.Guid})">
            <summary>
            Load grid layouts as list of grid layout items
            </summary>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Data.GridViews.DBGridViews.LoadViewLayout(System.Guid)">
            <summary>
            Load the layout view XML
            </summary>
            <param name="name"></param>
            <param name="form"></param>
            <param name="gView"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Data.GridViews.DBGridViews.SaveViewLayout(System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
            Save a grid layout
            </summary>
            <param name="name"></param>
            <param name="form"></param>
            <param name="gView"></param>
            <param name="layoutStr"></param>
            <param name="type"></param>
            <param name="user"></param>
            <param name="isGlobal"></param>
            <param name="printOptions"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Data.GridViews.DBGridViews.SaveViewLayout(IBSControlLibrary.Model.GridLayoutItem)">
            <summary>
            [OBSOLETE] - Save Grid Layout
            </summary>
            <param name="_layoutItem"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Data.GridViews.DBGridViews.SaveViewLayout(IBSControlLibrary.Model.ViewLayoutItem)">
            <summary>
            Save View Layout
            </summary>
            <param name="_layoutItem"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Data.GridViews.DBGridViews.PopulateLayoutParameters(System.Data.SqlClient.SqlCommand,IBSControlLibrary.Model.GridLayoutItem)">
            <summary>
            [OBSOLETE] - Populate the Grid View Layout parameters
            </summary>
            <param name="cmd"></param>
            <param name="_obj"></param>
        </member>
        <member name="M:IBSControlLibrary.Data.GridViews.DBGridViews.PopulateLayoutParameters(System.Data.SqlClient.SqlCommand,IBSControlLibrary.Model.ViewLayoutItem)">
            <summary>
            Populate the Grid View Layout parameters
            </summary>
            <param name="cmd"></param>
            <param name="_obj"></param>
        </member>
        <member name="M:IBSControlLibrary.Data.GridViews.DBGridViews.SaveViewLayoutDefault(System.String,System.Guid)">
            <summary>
            Save Grid Layout as Default
            </summary>
            <param name="_layoutItem"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Data.GridViews.DBGridViews.SetViewAsGroupDefault(IBSControlLibrary.Model.GridLayoutItem)">
            <summary>
            [OBSOLETE]
            Set layout as the default for the current layout group
            Requires [IsDevelopmentMode] set to True
            </summary>
            <param name="_layoutItem"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Data.GridViews.DBGridViews.SetViewAsGroupDefault(IBSControlLibrary.Model.ViewLayoutItem)">
            <summary>
            Set layout as the default for the current layout group
            Requires [IsDevelopmentMode] set to True
            </summary>
            <param name="_layoutItem"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Data.GridViews.DBGridViews.UpdateLayoutIsGlobal(IBSControlLibrary.Model.GridLayoutItem,System.Boolean)">
            <summary>
            [OBSOLETE]
            Set current layout to be a global layout
            </summary>
            <param name="_layoutItem"></param>
            <param name="_isGlobal"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Data.GridViews.DBGridViews.UpdateLayoutIsGlobal(IBSControlLibrary.Model.ViewLayoutItem,System.Boolean)">
            <summary>
            Set current layout to be a global layout
            </summary>
            <param name="_layoutItem"></param>
            <param name="_isGlobal"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Data.GridViews.DBGridViews.DeleteGridLayout(IBSControlLibrary.Model.GridLayoutItem)">
            <summary>
            [OBSOLETE]
            Delete grid layout
            </summary>
            <param name="_layoutItem"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Data.GridViews.DBGridViews.DeleteGridLayout(IBSControlLibrary.Model.ViewLayoutItem)">
            <summary>
            Delete view layout
            </summary>
            <param name="_layoutItem"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Data.GridViews.DBGridViews.GetShellSettingValue(System.String)">
            <summary>
            Get the shell setting value
            </summary>
            <param name="layoutGroupName"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Data.GridViews.DBGridViews.UpdateShellSettingValue(System.String,System.String)">
            <summary>
            Update shell setting value
            </summary>
            <param name="settingName"></param>
            <param name="settingValue"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.UIData.ConnectionService.GetCentralConnection">
            <summary>
            Get the central connection for baseplate
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.UIData.DBGeneric.LoadDataTable(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Loads a datatable 
            </summary>
            <param name="fields"></param>
            <param name="tableName"></param>
            <param name="whereStr"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:IBSControlLibrary.UIData.DBGeneric.Save(System.Guid,System.String,System.String,System.String,System.String)">
            <summary>
            Generic save
            </summary>
            <param name="key"></param>
            <param name="keyField"></param>
            <param name="value"></param>
            <param name="fieldName"></param>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.UIData.DBScriptUpdateController.UpdateDB">
            <summary>
            Run applicable SQL scripts on database for use by the SHELL library
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.UIData.DBScriptUpdateController.UpdateSpreadsheetDB">
            <summary>
            [SPREADSHEET] - Run applicable SQL scripts on database for use by the SHELL library
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.UIData.DBScriptUpdateController.RunSettingsDBScripts">
            <summary>
            Run 
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.UIData.DBScriptUpdateController.RunGridViewDBScripts">
            <summary>
            Run 
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.UIData.DBScriptUpdateController.RunSpreadsheetDBScripts">
            <summary>
            Run 
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.UIData.SQL.SQLServerFunctions.TableExists(System.String,System.String,System.String,System.String)">
            <summary>
            Check if database table exists
            </summary>
            <param name="server"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:IBSControlLibrary.UIData.SQL.SQLServerFunctions.ExecuteScript(System.String)">
            <summary>
            Execute an sql script
            </summary>
            <param name="script"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Utils.ColorUtils.GetColorLight(System.Drawing.Color)">
            <summary>
            Return a light version of the color
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Utils.ColorUtils.GetColorDark(System.Drawing.Color)">
            <summary>
            Return a darker version of the color
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Utils.ColorUtils.GetColorFromRGBString(System.String,System.Int32)">
            <summary>
            Convert rgb string to color
            </summary>
            <param name="rgb">ie. 100,100,100</param>
            <returns></returns>
            <remarks>Also allows for Alpha</remarks>
        </member>
        <member name="M:IBSControlLibrary.Utils.CommandLineUtils.GetCommandLinePropertyValue(System.String[],System.String,System.String)">
            <summary>
            Get the property value from baseplate command line arguments
            </summary>
            <param name="commandArgs"></param>
            <param name="propertyName"></param>
        </member>
        <member name="M:IBSControlLibrary.Utils.ConnectionUtils.GetConnectionServer(System.String)">
            <summary>
            Strip out the server name from a connection string
            </summary>
            <param name="connString"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Utils.ConnectionUtils.GetConnectionDB(System.String)">
            <summary>
            Strip out the database name from a connection string
            </summary>
            <param name="connString"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Utils.ConnectionUtils.GetPropertyValue(System.String,System.String,System.Char)">
            <summary>
            Retrieves the value of a name=value pair string
            </summary>
            <param name="connString"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Utils.ConnectionUtils.TestConnection(System.String)">
            <summary>
            Check if Connection string is valid (ie. can connect)
            </summary>
            <param name="connectionString"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Utils.DataUtils.CheckNullValue(System.Object,System.Object)">
            <summary>
            Checks for NULL value and returns default is NULL
            </summary>
            <param name="val"></param>
            <param name="def"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:IBSControlLibrary.Utils.DataUtils.SetDataAdapter(System.Object@,System.String)">
            <summary>
            Change a data adapter connection string
            </summary>
            <param name="tableAdapter"></param>
            <param name="connString"></param>
            <remarks></remarks>
        </member>
        <member name="M:IBSControlLibrary.Utils.DataUtils.ConvertToDataTable``1(System.Collections.Generic.IList{``0})">
            <summary>
            Convert list of objects to datatable
            </summary>
            <param name="list"></param>
            <remarks></remarks>
        </member>
        <member name="M:IBSControlLibrary.Utils.DataUtils.ConvertFromReadOnly(System.Data.DataTable@)">
            <summary>
            Convert all columns in datatable to be not read-only
            </summary>
            <param name="dt"></param>
            <remarks></remarks>
        </member>
        <member name="M:IBSControlLibrary.Utils.DataUtils.ConvertFromReadOnly(System.Data.DataTable)">
            <summary>
            Convert all columns in datatable to be not read-only
            </summary>
            <param name="dt"></param>
            <remarks></remarks>
        </member>
        <member name="M:IBSControlLibrary.Utils.DataUtils.AddColumn(System.Data.DataTable,System.String,System.Type,System.Boolean,System.Boolean,System.Boolean,System.Object)">
            <summary>
            Add new column to datatable, with default value
            </summary>
            <param name="data"></param>
            <param name="name"></param>
            <param name="type"></param>
            <param name="ro"></param>
            <param name="an"></param>
            <param name="un"></param>
            <remarks></remarks>
        </member>
        <member name="M:IBSControlLibrary.Utils.DataUtils.AddCheck(System.Data.DataTable,System.Boolean,System.String)">
            <summary>
            Add Boolean column to datatable
            </summary>
            <param name="dt"></param>
            <param name="defValue"></param>
            <param name="checkName"></param>
            <remarks></remarks>
        </member>
        <member name="M:IBSControlLibrary.Utils.DataUtils.CompareRow(System.Data.DataRow,System.Data.DataRow)">
            <summary>
            Compare two data rows
            </summary>
            <param name="sourceRow"></param>
            <param name="curRow"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:IBSControlLibrary.Utils.DataUtils.FilterDatatable(System.Data.DataTable,System.String,System.Boolean)">
            <summary>
            Filter Datatable
            </summary>
            <param name="dt">Datatble to be filtered</param>
            <param name="filterString">Filter string</param>
            <returns>Data Table</returns>
            <remarks></remarks>
        </member>
        <member name="M:IBSControlLibrary.Utils.DataUtils.Convert_DataTableToString(System.Data.DataTable,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Convert datatable values to string
            </summary>
            <param name="dt"></param>
            <param name="columns"></param>
            <param name="del"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:IBSControlLibrary.Utils.DataUtils.BulkDataUpdate(System.Data.DataTable@,System.String,System.String,System.Object,System.String,System.Object,System.Boolean,System.Boolean)">
            <summary>
            Bulk updates a data table column bases on column value
            </summary>
            <param name="dt"></param>
            <param name="updateMsg"></param>
            <param name="fField"></param>
            <param name="fValue"></param>
            <param name="uField"></param>
            <param name="uValue"></param>
            <param name="AcceptChanges"></param>
            <param name="ShowConfirmation"></param>
            <remarks></remarks>
        </member>
        <member name="M:IBSControlLibrary.Utils.DataUtils.StringConversion(System.Object)">
            <summary>
            Checks for NULL values and convert special characters in strings replace ' with ''
            </summary>
            <param name="str"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:IBSControlLibrary.Utils.DataUtils.MeasureString(System.String,System.String,System.Single)">
            <summary>
            Returns a SizeF of a string (Width or height)
            </summary>
            <param name="BannerText"></param>
            <param name="FontName"></param>
            <param name="FontSize"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:IBSControlLibrary.Utils.DataUtils.CheckAnd(System.String@)">
            <summary>
            Add 'AND' to string if string is not empty
            </summary>
            <param name="str"></param>
            <remarks></remarks>
        </member>
        <member name="M:IBSControlLibrary.Utils.DataUtils.CheckAnd(System.String,System.String)">
            <summary>
            Helps to build filter string 'AND'
            </summary>
            <param name="strVal"></param>
            <param name="curVal"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:IBSControlLibrary.Utils.DataUtils.CheckOR(System.String@)">
            <summary>
            Add 'OR' to string if string is not empty
            </summary>
            <param name="str"></param>
            <remarks></remarks>
        </member>
        <member name="M:IBSControlLibrary.Utils.DataUtils.CheckWhere(System.String)">
            <summary>
            Checks to make sure a 'WHERE' exists in a filter string, adds it if not found
            </summary>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Utils.DataUtils.RoundUp(System.Double)">
            <summary>
            Always round a number up
            </summary>
            <param name="num"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:IBSControlLibrary.Utils.DataUtils.RoundDown(System.Double)">
            <summary>
            Always Round a # down
            </summary>
            <param name="num"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:IBSControlLibrary.Utils.FileUtils.IsValidFilename(System.String)">
            <summary>
            Check if filename is valid (no invalid characters)
            </summary>
            <param name="filename"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:IBSControlLibrary.Utils.FileUtils.IsValidPath(System.String)">
            <summary>
            Check if file path is valid (no invalid characters)
            </summary>
            <param name="path"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:IBSControlLibrary.Utils.FileUtils.RemoveInvalidCharacters(System.String)">
            <summary>
            Removes and invalid characters from filename/path that is passed
            </summary>
            <param name="filename"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:IBSControlLibrary.Utils.FileUtils.CheckProgramFiles(System.String)">
            <summary>
            Replaces Program files to Program Files (x86) on 64 bit machines
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Utils.FileUtils.GetFileName(System.String,System.String,System.String)">
            <summary>
            Returns file name
            </summary>
            <param name="defFolder"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:IBSControlLibrary.Utils.FileUtils.GetFileFullName(System.String,System.String,System.String)">
            <summary>
            Returns file full name
            </summary>
            <param name="defFolder"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:IBSControlLibrary.Utils.FileUtils.GetFolderName(System.String)">
            <summary>
            Returns folder name
            </summary>
            <param name="defFolder"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:IBSControlLibrary.Utils.FileUtils.GetFolderPath(System.String)">
            <summary>
            Returns folder Path
            </summary>
            <param name="defFolder"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:IBSControlLibrary.Utils.FileUtils.CreateExcelFileInfo(System.String)">
            <summary>
            Generate a file info for 
            </summary>
            <param name="_view"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Utils.FileUtils.BrowseFile(System.String,System.String,System.String)">
            <summary>
            Open file dialog (return unc path if network drive)
            </summary>
            <param name="curPath"></param>
            <param name="ext"></param>
            <param name="filter"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:IBSControlLibrary.Utils.FileUtils.BrowseFolder(System.String)">
            <summary>
            Open folder dialog (return unc path if network drive)
            </summary>
            <param name="curPath"></param>
            <param name="getUnc"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:IBSControlLibrary.Utils.FileUtils.FileLoad(System.IO.DirectoryInfo,System.Collections.Generic.List{System.IO.FileInfo}@,System.Collections.Specialized.StringCollection@)">
            <summary>
            Load list of files from file system
            </summary>
            <param name="root"></param>
            <param name="fileCol"></param>
            <param name="log"></param>
        </member>
        <member name="M:IBSControlLibrary.Utils.FileUtils.GetUNCPath(System.String)">
            <summary>
            Given a path, returns the UNC path or the original. (No exceptions
            are raised by this function directly). For example, "P:\2008-02-29"
            might return: "\\networkserver\Shares\Photos\2008-02-09"
            </summary>
            <param name="originalPath">The path to convert to a UNC Path</param>
            <returns>A UNC path. If a network drive letter is specified, the
            drive letter is converted to a UNC or network path. If the 
            originalPath cannot be converted, it is returned unchanged.</returns>
        </member>
        <member name="M:IBSControlLibrary.Utils.FileUtils.GetFileVersion(System.String)">
            <summary>
            Get the files version
            </summary>
            <param name="assemblyPath">System.Reflection.Assembly.GetExecutingAssembly().Location</param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Utils.FileUtils.GetFileVersionDate(System.String)">
            <summary>
            Get the files version date
            </summary>
            <param name="assemblyPath">System.Reflection.Assembly.GetExecutingAssembly().Location</param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Utils.ControlUtils.GetUserName">
            <summary>
            Get current users full name
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Utils.ControlUtils.InitWaitForm(System.String)">
            <summary>
            initialize wait form
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:IBSControlLibrary.Utils.ControlUtils.CloseWaitForm">
            <summary>
            close the wait form
            </summary>
        </member>
        <member name="M:IBSControlLibrary.Utils.ControlUtils.InvokeObjectMethod(System.Object,System.String,System.Object[])">
            <summary>
            Invokes one of the parent's methods
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:IBSControlLibrary.Utils.ControlUtils.LoadUserControl(System.Object,System.Windows.Forms.UserControl,System.Windows.Forms.DockStyle)">
            <summary>
            Load user control to provided container
            </summary>
            <param name="panel"></param>
            <param name="uc"></param>
            <remarks></remarks>
        </member>
        <member name="M:IBSControlLibrary.Utils.ControlUtils.CheckFieldFilled(System.Object)">
            <summary>
            Check if control has been populated
            </summary>
            <param name="cont"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:IBSControlLibrary.Utils.ControlUtils.getYoungestChildUnderMouse(System.Windows.Forms.Control)">
            <summary>
            Retrieves the lowest level control under the mouse cursor.
            </summary>
            <param name="topControl"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Utils.ControlUtils.IsInDesignMode(System.Windows.Forms.Control)">
            <summary>
            Extension method to return if the control is in design mode
            </summary>
            <param name="control">Control to examine</param>
            <returns>True if in design mode, otherwise false</returns>
        </member>
        <member name="M:IBSControlLibrary.Utils.ControlUtils.ResolveDesignMode(System.Windows.Forms.Control)">
            <summary>
            Method to test if the control or it's parent is in design mode
            </summary>
            <param name="control">Control to examine</param>
            <returns>True if in design mode, otherwise false</returns>
        </member>
        <member name="M:IBSControlLibrary.Utils.ControlUtils.CalcControlHeight(System.Windows.Forms.Control)">
            <summary>
            Calculate control height based on controls in container
            </summary>
            <param name="_cont"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Utils.FunctionTimer.InvokeObjectMethod(System.String,System.Object[])">
            <summary>
            Invokes one of the parent's methods..
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:IBSControlLibrary.Utils.ImageUtils.GetArrayFromFile(System.String)">
            <summary>
            Get Byte Array from image file
            </summary>
            <param name="imgPath"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:IBSControlLibrary.Utils.ImageUtils.GetArrayFromImage(System.Drawing.Image)">
            <summary>
            Get byte array from Image
            </summary>
            <param name="img"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:IBSControlLibrary.Utils.ImageUtils.GetEmbeddedButtonsResource(System.String,System.String)">
            <summary>
            Get image from embedded resource
            </summary>
            <param name="folder"></param>
            <param name="imageName"></param>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Utils.ImageUtils.GetListOfEmbeddedResources">
            <summary>
            Get list of embedded resources
            </summary>
            <returns></returns>
        </member>
        <member name="M:IBSControlLibrary.Utils.ImageUtils.MakeImageOpaque(System.Int32,System.Windows.Forms.PictureBox)">
            <summary>
            Make an image 'look' opaque
            </summary>
            <param name="alpha"></param>
            <param name="_pic"></param>
        </member>
    </members>
</doc>
